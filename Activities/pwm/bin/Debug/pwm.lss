
bin\Debug\pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000124a  000012de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000124a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000012e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .debug_aranges 00000160  00000000  00000000  000012e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000001a8  00000000  00000000  00001449  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001f8e  00000000  00000000  000015f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001018  00000000  00000000  0000357f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001170  00000000  00000000  00004597  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000180  00000000  00000000  00005708  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000321  00000000  00000000  00005888  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  00005ba9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00006377  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e4       	ldi	r30, 0x4A	; 74
      7c:	f2 e1       	ldi	r31, 0x12	; 18
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>
      8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
      8e:	0c 94 23 09 	jmp	0x1246	; 0x1246 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:

#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	df 93       	push	r29
      9c:	cf 93       	push	r28
      9e:	cd b7       	in	r28, 0x3d	; 61
      a0:	de b7       	in	r29, 0x3e	; 62
      a2:	c4 55       	subi	r28, 0x54	; 84
      a4:	d0 40       	sbci	r29, 0x00	; 0
      a6:	0f b6       	in	r0, 0x3f	; 63
      a8:	f8 94       	cli
      aa:	de bf       	out	0x3e, r29	; 62
      ac:	0f be       	out	0x3f, r0	; 63
      ae:	cd bf       	out	0x3d, r28	; 61

    TCCR1A |= (1<<COM1A1)|(1<<WGM11)|(1<<WGM10);
      b0:	a0 e8       	ldi	r26, 0x80	; 128
      b2:	b0 e0       	ldi	r27, 0x00	; 0
      b4:	e0 e8       	ldi	r30, 0x80	; 128
      b6:	f0 e0       	ldi	r31, 0x00	; 0
      b8:	80 81       	ld	r24, Z
      ba:	83 68       	ori	r24, 0x83	; 131
      bc:	8c 93       	st	X, r24
    TCCR1B |= (1<<WGM12)|(1<<CS11)|(1<<CS10); //64 prescalar
      be:	a1 e8       	ldi	r26, 0x81	; 129
      c0:	b0 e0       	ldi	r27, 0x00	; 0
      c2:	e1 e8       	ldi	r30, 0x81	; 129
      c4:	f0 e0       	ldi	r31, 0x00	; 0
      c6:	80 81       	ld	r24, Z
      c8:	8b 60       	ori	r24, 0x0B	; 11
      ca:	8c 93       	st	X, r24
    DDRB |= (1<<PB1);
      cc:	a4 e2       	ldi	r26, 0x24	; 36
      ce:	b0 e0       	ldi	r27, 0x00	; 0
      d0:	e4 e2       	ldi	r30, 0x24	; 36
      d2:	f0 e0       	ldi	r31, 0x00	; 0
      d4:	80 81       	ld	r24, Z
      d6:	82 60       	ori	r24, 0x02	; 2
      d8:	8c 93       	st	X, r24

    while(1)
    {

        OCR1A = 100;
      da:	e8 e8       	ldi	r30, 0x88	; 136
      dc:	f0 e0       	ldi	r31, 0x00	; 0
      de:	84 e6       	ldi	r24, 0x64	; 100
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	91 83       	std	Z+1, r25	; 0x01
      e4:	80 83       	st	Z, r24
      e6:	fe 01       	movw	r30, r28
      e8:	ef 5a       	subi	r30, 0xAF	; 175
      ea:	ff 4f       	sbci	r31, 0xFF	; 255
      ec:	80 e0       	ldi	r24, 0x00	; 0
      ee:	90 e0       	ldi	r25, 0x00	; 0
      f0:	a8 e4       	ldi	r26, 0x48	; 72
      f2:	b3 e4       	ldi	r27, 0x43	; 67
      f4:	80 83       	st	Z, r24
      f6:	91 83       	std	Z+1, r25	; 0x01
      f8:	a2 83       	std	Z+2, r26	; 0x02
      fa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
      fc:	8e 01       	movw	r16, r28
      fe:	03 5b       	subi	r16, 0xB3	; 179
     100:	1f 4f       	sbci	r17, 0xFF	; 255
     102:	fe 01       	movw	r30, r28
     104:	ef 5a       	subi	r30, 0xAF	; 175
     106:	ff 4f       	sbci	r31, 0xFF	; 255
     108:	60 81       	ld	r22, Z
     10a:	71 81       	ldd	r23, Z+1	; 0x01
     10c:	82 81       	ldd	r24, Z+2	; 0x02
     10e:	93 81       	ldd	r25, Z+3	; 0x03
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	4a e7       	ldi	r20, 0x7A	; 122
     116:	55 e4       	ldi	r21, 0x45	; 69
     118:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     11c:	dc 01       	movw	r26, r24
     11e:	cb 01       	movw	r24, r22
     120:	f8 01       	movw	r30, r16
     122:	80 83       	st	Z, r24
     124:	91 83       	std	Z+1, r25	; 0x01
     126:	a2 83       	std	Z+2, r26	; 0x02
     128:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     12a:	fe 01       	movw	r30, r28
     12c:	e3 5b       	subi	r30, 0xB3	; 179
     12e:	ff 4f       	sbci	r31, 0xFF	; 255
     130:	60 81       	ld	r22, Z
     132:	71 81       	ldd	r23, Z+1	; 0x01
     134:	82 81       	ldd	r24, Z+2	; 0x02
     136:	93 81       	ldd	r25, Z+3	; 0x03
     138:	20 e0       	ldi	r18, 0x00	; 0
     13a:	30 e0       	ldi	r19, 0x00	; 0
     13c:	40 e8       	ldi	r20, 0x80	; 128
     13e:	5f e3       	ldi	r21, 0x3F	; 63
     140:	0e 94 c2 06 	call	0xd84	; 0xd84 <__ltsf2>
     144:	88 23       	and	r24, r24
     146:	44 f4       	brge	.+16     	; 0x158 <main+0xc2>
		__ticks = 1;
     148:	fe 01       	movw	r30, r28
     14a:	e5 5b       	subi	r30, 0xB5	; 181
     14c:	ff 4f       	sbci	r31, 0xFF	; 255
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	91 83       	std	Z+1, r25	; 0x01
     154:	80 83       	st	Z, r24
     156:	64 c0       	rjmp	.+200    	; 0x220 <main+0x18a>
	else if (__tmp > 65535)
     158:	fe 01       	movw	r30, r28
     15a:	e3 5b       	subi	r30, 0xB3	; 179
     15c:	ff 4f       	sbci	r31, 0xFF	; 255
     15e:	60 81       	ld	r22, Z
     160:	71 81       	ldd	r23, Z+1	; 0x01
     162:	82 81       	ldd	r24, Z+2	; 0x02
     164:	93 81       	ldd	r25, Z+3	; 0x03
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	3f ef       	ldi	r19, 0xFF	; 255
     16a:	4f e7       	ldi	r20, 0x7F	; 127
     16c:	57 e4       	ldi	r21, 0x47	; 71
     16e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__gtsf2>
     172:	18 16       	cp	r1, r24
     174:	0c f0       	brlt	.+2      	; 0x178 <main+0xe2>
     176:	43 c0       	rjmp	.+134    	; 0x1fe <main+0x168>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     178:	fe 01       	movw	r30, r28
     17a:	ef 5a       	subi	r30, 0xAF	; 175
     17c:	ff 4f       	sbci	r31, 0xFF	; 255
     17e:	60 81       	ld	r22, Z
     180:	71 81       	ldd	r23, Z+1	; 0x01
     182:	82 81       	ldd	r24, Z+2	; 0x02
     184:	93 81       	ldd	r25, Z+3	; 0x03
     186:	20 e0       	ldi	r18, 0x00	; 0
     188:	30 e0       	ldi	r19, 0x00	; 0
     18a:	40 e2       	ldi	r20, 0x20	; 32
     18c:	51 e4       	ldi	r21, 0x41	; 65
     18e:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     192:	dc 01       	movw	r26, r24
     194:	cb 01       	movw	r24, r22
     196:	8e 01       	movw	r16, r28
     198:	05 5b       	subi	r16, 0xB5	; 181
     19a:	1f 4f       	sbci	r17, 0xFF	; 255
     19c:	bc 01       	movw	r22, r24
     19e:	cd 01       	movw	r24, r26
     1a0:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     1a4:	dc 01       	movw	r26, r24
     1a6:	cb 01       	movw	r24, r22
     1a8:	f8 01       	movw	r30, r16
     1aa:	91 83       	std	Z+1, r25	; 0x01
     1ac:	80 83       	st	Z, r24
     1ae:	1f c0       	rjmp	.+62     	; 0x1ee <main+0x158>
     1b0:	fe 01       	movw	r30, r28
     1b2:	e7 5b       	subi	r30, 0xB7	; 183
     1b4:	ff 4f       	sbci	r31, 0xFF	; 255
     1b6:	80 e9       	ldi	r24, 0x90	; 144
     1b8:	91 e0       	ldi	r25, 0x01	; 1
     1ba:	91 83       	std	Z+1, r25	; 0x01
     1bc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1be:	fe 01       	movw	r30, r28
     1c0:	e7 5b       	subi	r30, 0xB7	; 183
     1c2:	ff 4f       	sbci	r31, 0xFF	; 255
     1c4:	80 81       	ld	r24, Z
     1c6:	91 81       	ldd	r25, Z+1	; 0x01
     1c8:	01 97       	sbiw	r24, 0x01	; 1
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <main+0x132>
     1cc:	fe 01       	movw	r30, r28
     1ce:	e7 5b       	subi	r30, 0xB7	; 183
     1d0:	ff 4f       	sbci	r31, 0xFF	; 255
     1d2:	91 83       	std	Z+1, r25	; 0x01
     1d4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1d6:	de 01       	movw	r26, r28
     1d8:	a5 5b       	subi	r26, 0xB5	; 181
     1da:	bf 4f       	sbci	r27, 0xFF	; 255
     1dc:	fe 01       	movw	r30, r28
     1de:	e5 5b       	subi	r30, 0xB5	; 181
     1e0:	ff 4f       	sbci	r31, 0xFF	; 255
     1e2:	80 81       	ld	r24, Z
     1e4:	91 81       	ldd	r25, Z+1	; 0x01
     1e6:	01 97       	sbiw	r24, 0x01	; 1
     1e8:	11 96       	adiw	r26, 0x01	; 1
     1ea:	9c 93       	st	X, r25
     1ec:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ee:	fe 01       	movw	r30, r28
     1f0:	e5 5b       	subi	r30, 0xB5	; 181
     1f2:	ff 4f       	sbci	r31, 0xFF	; 255
     1f4:	80 81       	ld	r24, Z
     1f6:	91 81       	ldd	r25, Z+1	; 0x01
     1f8:	00 97       	sbiw	r24, 0x00	; 0
     1fa:	d1 f6       	brne	.-76     	; 0x1b0 <main+0x11a>
     1fc:	27 c0       	rjmp	.+78     	; 0x24c <main+0x1b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1fe:	8e 01       	movw	r16, r28
     200:	05 5b       	subi	r16, 0xB5	; 181
     202:	1f 4f       	sbci	r17, 0xFF	; 255
     204:	fe 01       	movw	r30, r28
     206:	e3 5b       	subi	r30, 0xB3	; 179
     208:	ff 4f       	sbci	r31, 0xFF	; 255
     20a:	60 81       	ld	r22, Z
     20c:	71 81       	ldd	r23, Z+1	; 0x01
     20e:	82 81       	ldd	r24, Z+2	; 0x02
     210:	93 81       	ldd	r25, Z+3	; 0x03
     212:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     216:	dc 01       	movw	r26, r24
     218:	cb 01       	movw	r24, r22
     21a:	f8 01       	movw	r30, r16
     21c:	91 83       	std	Z+1, r25	; 0x01
     21e:	80 83       	st	Z, r24
     220:	de 01       	movw	r26, r28
     222:	a9 5b       	subi	r26, 0xB9	; 185
     224:	bf 4f       	sbci	r27, 0xFF	; 255
     226:	fe 01       	movw	r30, r28
     228:	e5 5b       	subi	r30, 0xB5	; 181
     22a:	ff 4f       	sbci	r31, 0xFF	; 255
     22c:	80 81       	ld	r24, Z
     22e:	91 81       	ldd	r25, Z+1	; 0x01
     230:	8d 93       	st	X+, r24
     232:	9c 93       	st	X, r25
     234:	fe 01       	movw	r30, r28
     236:	e9 5b       	subi	r30, 0xB9	; 185
     238:	ff 4f       	sbci	r31, 0xFF	; 255
     23a:	80 81       	ld	r24, Z
     23c:	91 81       	ldd	r25, Z+1	; 0x01
     23e:	01 97       	sbiw	r24, 0x01	; 1
     240:	f1 f7       	brne	.-4      	; 0x23e <main+0x1a8>
     242:	fe 01       	movw	r30, r28
     244:	e9 5b       	subi	r30, 0xB9	; 185
     246:	ff 4f       	sbci	r31, 0xFF	; 255
     248:	91 83       	std	Z+1, r25	; 0x01
     24a:	80 83       	st	Z, r24
        _delay_ms(200);
        OCR1A = 250;
     24c:	e8 e8       	ldi	r30, 0x88	; 136
     24e:	f0 e0       	ldi	r31, 0x00	; 0
     250:	8a ef       	ldi	r24, 0xFA	; 250
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	91 83       	std	Z+1, r25	; 0x01
     256:	80 83       	st	Z, r24
     258:	fe 01       	movw	r30, r28
     25a:	ed 5b       	subi	r30, 0xBD	; 189
     25c:	ff 4f       	sbci	r31, 0xFF	; 255
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	a8 e4       	ldi	r26, 0x48	; 72
     264:	b3 e4       	ldi	r27, 0x43	; 67
     266:	80 83       	st	Z, r24
     268:	91 83       	std	Z+1, r25	; 0x01
     26a:	a2 83       	std	Z+2, r26	; 0x02
     26c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     26e:	8e 01       	movw	r16, r28
     270:	01 5c       	subi	r16, 0xC1	; 193
     272:	1f 4f       	sbci	r17, 0xFF	; 255
     274:	fe 01       	movw	r30, r28
     276:	ed 5b       	subi	r30, 0xBD	; 189
     278:	ff 4f       	sbci	r31, 0xFF	; 255
     27a:	60 81       	ld	r22, Z
     27c:	71 81       	ldd	r23, Z+1	; 0x01
     27e:	82 81       	ldd	r24, Z+2	; 0x02
     280:	93 81       	ldd	r25, Z+3	; 0x03
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	30 e0       	ldi	r19, 0x00	; 0
     286:	4a e7       	ldi	r20, 0x7A	; 122
     288:	55 e4       	ldi	r21, 0x45	; 69
     28a:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     28e:	dc 01       	movw	r26, r24
     290:	cb 01       	movw	r24, r22
     292:	f8 01       	movw	r30, r16
     294:	80 83       	st	Z, r24
     296:	91 83       	std	Z+1, r25	; 0x01
     298:	a2 83       	std	Z+2, r26	; 0x02
     29a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     29c:	fe 01       	movw	r30, r28
     29e:	ff 96       	adiw	r30, 0x3f	; 63
     2a0:	60 81       	ld	r22, Z
     2a2:	71 81       	ldd	r23, Z+1	; 0x01
     2a4:	82 81       	ldd	r24, Z+2	; 0x02
     2a6:	93 81       	ldd	r25, Z+3	; 0x03
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e8       	ldi	r20, 0x80	; 128
     2ae:	5f e3       	ldi	r21, 0x3F	; 63
     2b0:	0e 94 c2 06 	call	0xd84	; 0xd84 <__ltsf2>
     2b4:	88 23       	and	r24, r24
     2b6:	2c f4       	brge	.+10     	; 0x2c2 <main+0x22c>
		__ticks = 1;
     2b8:	81 e0       	ldi	r24, 0x01	; 1
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	9e af       	std	Y+62, r25	; 0x3e
     2be:	8d af       	std	Y+61, r24	; 0x3d
     2c0:	46 c0       	rjmp	.+140    	; 0x34e <main+0x2b8>
	else if (__tmp > 65535)
     2c2:	fe 01       	movw	r30, r28
     2c4:	ff 96       	adiw	r30, 0x3f	; 63
     2c6:	60 81       	ld	r22, Z
     2c8:	71 81       	ldd	r23, Z+1	; 0x01
     2ca:	82 81       	ldd	r24, Z+2	; 0x02
     2cc:	93 81       	ldd	r25, Z+3	; 0x03
     2ce:	20 e0       	ldi	r18, 0x00	; 0
     2d0:	3f ef       	ldi	r19, 0xFF	; 255
     2d2:	4f e7       	ldi	r20, 0x7F	; 127
     2d4:	57 e4       	ldi	r21, 0x47	; 71
     2d6:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__gtsf2>
     2da:	18 16       	cp	r1, r24
     2dc:	64 f5       	brge	.+88     	; 0x336 <main+0x2a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2de:	fe 01       	movw	r30, r28
     2e0:	ed 5b       	subi	r30, 0xBD	; 189
     2e2:	ff 4f       	sbci	r31, 0xFF	; 255
     2e4:	60 81       	ld	r22, Z
     2e6:	71 81       	ldd	r23, Z+1	; 0x01
     2e8:	82 81       	ldd	r24, Z+2	; 0x02
     2ea:	93 81       	ldd	r25, Z+3	; 0x03
     2ec:	20 e0       	ldi	r18, 0x00	; 0
     2ee:	30 e0       	ldi	r19, 0x00	; 0
     2f0:	40 e2       	ldi	r20, 0x20	; 32
     2f2:	51 e4       	ldi	r21, 0x41	; 65
     2f4:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     2f8:	dc 01       	movw	r26, r24
     2fa:	cb 01       	movw	r24, r22
     2fc:	bc 01       	movw	r22, r24
     2fe:	cd 01       	movw	r24, r26
     300:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     304:	dc 01       	movw	r26, r24
     306:	cb 01       	movw	r24, r22
     308:	9e af       	std	Y+62, r25	; 0x3e
     30a:	8d af       	std	Y+61, r24	; 0x3d
     30c:	0f c0       	rjmp	.+30     	; 0x32c <main+0x296>
     30e:	80 e9       	ldi	r24, 0x90	; 144
     310:	91 e0       	ldi	r25, 0x01	; 1
     312:	9c af       	std	Y+60, r25	; 0x3c
     314:	8b af       	std	Y+59, r24	; 0x3b
     316:	8b ad       	ldd	r24, Y+59	; 0x3b
     318:	9c ad       	ldd	r25, Y+60	; 0x3c
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <main+0x284>
     31e:	9c af       	std	Y+60, r25	; 0x3c
     320:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     322:	8d ad       	ldd	r24, Y+61	; 0x3d
     324:	9e ad       	ldd	r25, Y+62	; 0x3e
     326:	01 97       	sbiw	r24, 0x01	; 1
     328:	9e af       	std	Y+62, r25	; 0x3e
     32a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     32c:	8d ad       	ldd	r24, Y+61	; 0x3d
     32e:	9e ad       	ldd	r25, Y+62	; 0x3e
     330:	00 97       	sbiw	r24, 0x00	; 0
     332:	69 f7       	brne	.-38     	; 0x30e <main+0x278>
     334:	16 c0       	rjmp	.+44     	; 0x362 <main+0x2cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     336:	fe 01       	movw	r30, r28
     338:	ff 96       	adiw	r30, 0x3f	; 63
     33a:	60 81       	ld	r22, Z
     33c:	71 81       	ldd	r23, Z+1	; 0x01
     33e:	82 81       	ldd	r24, Z+2	; 0x02
     340:	93 81       	ldd	r25, Z+3	; 0x03
     342:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     346:	dc 01       	movw	r26, r24
     348:	cb 01       	movw	r24, r22
     34a:	9e af       	std	Y+62, r25	; 0x3e
     34c:	8d af       	std	Y+61, r24	; 0x3d
     34e:	8d ad       	ldd	r24, Y+61	; 0x3d
     350:	9e ad       	ldd	r25, Y+62	; 0x3e
     352:	9a af       	std	Y+58, r25	; 0x3a
     354:	89 af       	std	Y+57, r24	; 0x39
     356:	89 ad       	ldd	r24, Y+57	; 0x39
     358:	9a ad       	ldd	r25, Y+58	; 0x3a
     35a:	01 97       	sbiw	r24, 0x01	; 1
     35c:	f1 f7       	brne	.-4      	; 0x35a <main+0x2c4>
     35e:	9a af       	std	Y+58, r25	; 0x3a
     360:	89 af       	std	Y+57, r24	; 0x39
        _delay_ms(200);
        OCR1A = 400;
     362:	e8 e8       	ldi	r30, 0x88	; 136
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 e9       	ldi	r24, 0x90	; 144
     368:	91 e0       	ldi	r25, 0x01	; 1
     36a:	91 83       	std	Z+1, r25	; 0x01
     36c:	80 83       	st	Z, r24
     36e:	80 e0       	ldi	r24, 0x00	; 0
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	a8 e4       	ldi	r26, 0x48	; 72
     374:	b3 e4       	ldi	r27, 0x43	; 67
     376:	8d ab       	std	Y+53, r24	; 0x35
     378:	9e ab       	std	Y+54, r25	; 0x36
     37a:	af ab       	std	Y+55, r26	; 0x37
     37c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     37e:	6d a9       	ldd	r22, Y+53	; 0x35
     380:	7e a9       	ldd	r23, Y+54	; 0x36
     382:	8f a9       	ldd	r24, Y+55	; 0x37
     384:	98 ad       	ldd	r25, Y+56	; 0x38
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	4a e7       	ldi	r20, 0x7A	; 122
     38c:	55 e4       	ldi	r21, 0x45	; 69
     38e:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     392:	dc 01       	movw	r26, r24
     394:	cb 01       	movw	r24, r22
     396:	89 ab       	std	Y+49, r24	; 0x31
     398:	9a ab       	std	Y+50, r25	; 0x32
     39a:	ab ab       	std	Y+51, r26	; 0x33
     39c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     39e:	69 a9       	ldd	r22, Y+49	; 0x31
     3a0:	7a a9       	ldd	r23, Y+50	; 0x32
     3a2:	8b a9       	ldd	r24, Y+51	; 0x33
     3a4:	9c a9       	ldd	r25, Y+52	; 0x34
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	40 e8       	ldi	r20, 0x80	; 128
     3ac:	5f e3       	ldi	r21, 0x3F	; 63
     3ae:	0e 94 c2 06 	call	0xd84	; 0xd84 <__ltsf2>
     3b2:	88 23       	and	r24, r24
     3b4:	2c f4       	brge	.+10     	; 0x3c0 <main+0x32a>
		__ticks = 1;
     3b6:	81 e0       	ldi	r24, 0x01	; 1
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	98 ab       	std	Y+48, r25	; 0x30
     3bc:	8f a7       	std	Y+47, r24	; 0x2f
     3be:	3f c0       	rjmp	.+126    	; 0x43e <main+0x3a8>
	else if (__tmp > 65535)
     3c0:	69 a9       	ldd	r22, Y+49	; 0x31
     3c2:	7a a9       	ldd	r23, Y+50	; 0x32
     3c4:	8b a9       	ldd	r24, Y+51	; 0x33
     3c6:	9c a9       	ldd	r25, Y+52	; 0x34
     3c8:	20 e0       	ldi	r18, 0x00	; 0
     3ca:	3f ef       	ldi	r19, 0xFF	; 255
     3cc:	4f e7       	ldi	r20, 0x7F	; 127
     3ce:	57 e4       	ldi	r21, 0x47	; 71
     3d0:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__gtsf2>
     3d4:	18 16       	cp	r1, r24
     3d6:	4c f5       	brge	.+82     	; 0x42a <main+0x394>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3d8:	6d a9       	ldd	r22, Y+53	; 0x35
     3da:	7e a9       	ldd	r23, Y+54	; 0x36
     3dc:	8f a9       	ldd	r24, Y+55	; 0x37
     3de:	98 ad       	ldd	r25, Y+56	; 0x38
     3e0:	20 e0       	ldi	r18, 0x00	; 0
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	40 e2       	ldi	r20, 0x20	; 32
     3e6:	51 e4       	ldi	r21, 0x41	; 65
     3e8:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     3ec:	dc 01       	movw	r26, r24
     3ee:	cb 01       	movw	r24, r22
     3f0:	bc 01       	movw	r22, r24
     3f2:	cd 01       	movw	r24, r26
     3f4:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     3f8:	dc 01       	movw	r26, r24
     3fa:	cb 01       	movw	r24, r22
     3fc:	98 ab       	std	Y+48, r25	; 0x30
     3fe:	8f a7       	std	Y+47, r24	; 0x2f
     400:	0f c0       	rjmp	.+30     	; 0x420 <main+0x38a>
     402:	80 e9       	ldi	r24, 0x90	; 144
     404:	91 e0       	ldi	r25, 0x01	; 1
     406:	9e a7       	std	Y+46, r25	; 0x2e
     408:	8d a7       	std	Y+45, r24	; 0x2d
     40a:	8d a5       	ldd	r24, Y+45	; 0x2d
     40c:	9e a5       	ldd	r25, Y+46	; 0x2e
     40e:	01 97       	sbiw	r24, 0x01	; 1
     410:	f1 f7       	brne	.-4      	; 0x40e <main+0x378>
     412:	9e a7       	std	Y+46, r25	; 0x2e
     414:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     416:	8f a5       	ldd	r24, Y+47	; 0x2f
     418:	98 a9       	ldd	r25, Y+48	; 0x30
     41a:	01 97       	sbiw	r24, 0x01	; 1
     41c:	98 ab       	std	Y+48, r25	; 0x30
     41e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     420:	8f a5       	ldd	r24, Y+47	; 0x2f
     422:	98 a9       	ldd	r25, Y+48	; 0x30
     424:	00 97       	sbiw	r24, 0x00	; 0
     426:	69 f7       	brne	.-38     	; 0x402 <main+0x36c>
     428:	14 c0       	rjmp	.+40     	; 0x452 <main+0x3bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     42a:	69 a9       	ldd	r22, Y+49	; 0x31
     42c:	7a a9       	ldd	r23, Y+50	; 0x32
     42e:	8b a9       	ldd	r24, Y+51	; 0x33
     430:	9c a9       	ldd	r25, Y+52	; 0x34
     432:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     436:	dc 01       	movw	r26, r24
     438:	cb 01       	movw	r24, r22
     43a:	98 ab       	std	Y+48, r25	; 0x30
     43c:	8f a7       	std	Y+47, r24	; 0x2f
     43e:	8f a5       	ldd	r24, Y+47	; 0x2f
     440:	98 a9       	ldd	r25, Y+48	; 0x30
     442:	9c a7       	std	Y+44, r25	; 0x2c
     444:	8b a7       	std	Y+43, r24	; 0x2b
     446:	8b a5       	ldd	r24, Y+43	; 0x2b
     448:	9c a5       	ldd	r25, Y+44	; 0x2c
     44a:	01 97       	sbiw	r24, 0x01	; 1
     44c:	f1 f7       	brne	.-4      	; 0x44a <main+0x3b4>
     44e:	9c a7       	std	Y+44, r25	; 0x2c
     450:	8b a7       	std	Y+43, r24	; 0x2b
        _delay_ms(200);
        OCR1A = 650;
     452:	e8 e8       	ldi	r30, 0x88	; 136
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	8a e8       	ldi	r24, 0x8A	; 138
     458:	92 e0       	ldi	r25, 0x02	; 2
     45a:	91 83       	std	Z+1, r25	; 0x01
     45c:	80 83       	st	Z, r24
     45e:	80 e0       	ldi	r24, 0x00	; 0
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	a8 e4       	ldi	r26, 0x48	; 72
     464:	b3 e4       	ldi	r27, 0x43	; 67
     466:	8f a3       	std	Y+39, r24	; 0x27
     468:	98 a7       	std	Y+40, r25	; 0x28
     46a:	a9 a7       	std	Y+41, r26	; 0x29
     46c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     46e:	6f a1       	ldd	r22, Y+39	; 0x27
     470:	78 a5       	ldd	r23, Y+40	; 0x28
     472:	89 a5       	ldd	r24, Y+41	; 0x29
     474:	9a a5       	ldd	r25, Y+42	; 0x2a
     476:	20 e0       	ldi	r18, 0x00	; 0
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	4a e7       	ldi	r20, 0x7A	; 122
     47c:	55 e4       	ldi	r21, 0x45	; 69
     47e:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     482:	dc 01       	movw	r26, r24
     484:	cb 01       	movw	r24, r22
     486:	8b a3       	std	Y+35, r24	; 0x23
     488:	9c a3       	std	Y+36, r25	; 0x24
     48a:	ad a3       	std	Y+37, r26	; 0x25
     48c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     48e:	6b a1       	ldd	r22, Y+35	; 0x23
     490:	7c a1       	ldd	r23, Y+36	; 0x24
     492:	8d a1       	ldd	r24, Y+37	; 0x25
     494:	9e a1       	ldd	r25, Y+38	; 0x26
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	40 e8       	ldi	r20, 0x80	; 128
     49c:	5f e3       	ldi	r21, 0x3F	; 63
     49e:	0e 94 c2 06 	call	0xd84	; 0xd84 <__ltsf2>
     4a2:	88 23       	and	r24, r24
     4a4:	2c f4       	brge	.+10     	; 0x4b0 <main+0x41a>
		__ticks = 1;
     4a6:	81 e0       	ldi	r24, 0x01	; 1
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	9a a3       	std	Y+34, r25	; 0x22
     4ac:	89 a3       	std	Y+33, r24	; 0x21
     4ae:	3f c0       	rjmp	.+126    	; 0x52e <main+0x498>
	else if (__tmp > 65535)
     4b0:	6b a1       	ldd	r22, Y+35	; 0x23
     4b2:	7c a1       	ldd	r23, Y+36	; 0x24
     4b4:	8d a1       	ldd	r24, Y+37	; 0x25
     4b6:	9e a1       	ldd	r25, Y+38	; 0x26
     4b8:	20 e0       	ldi	r18, 0x00	; 0
     4ba:	3f ef       	ldi	r19, 0xFF	; 255
     4bc:	4f e7       	ldi	r20, 0x7F	; 127
     4be:	57 e4       	ldi	r21, 0x47	; 71
     4c0:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__gtsf2>
     4c4:	18 16       	cp	r1, r24
     4c6:	4c f5       	brge	.+82     	; 0x51a <main+0x484>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4c8:	6f a1       	ldd	r22, Y+39	; 0x27
     4ca:	78 a5       	ldd	r23, Y+40	; 0x28
     4cc:	89 a5       	ldd	r24, Y+41	; 0x29
     4ce:	9a a5       	ldd	r25, Y+42	; 0x2a
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	40 e2       	ldi	r20, 0x20	; 32
     4d6:	51 e4       	ldi	r21, 0x41	; 65
     4d8:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     4dc:	dc 01       	movw	r26, r24
     4de:	cb 01       	movw	r24, r22
     4e0:	bc 01       	movw	r22, r24
     4e2:	cd 01       	movw	r24, r26
     4e4:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     4e8:	dc 01       	movw	r26, r24
     4ea:	cb 01       	movw	r24, r22
     4ec:	9a a3       	std	Y+34, r25	; 0x22
     4ee:	89 a3       	std	Y+33, r24	; 0x21
     4f0:	0f c0       	rjmp	.+30     	; 0x510 <main+0x47a>
     4f2:	80 e9       	ldi	r24, 0x90	; 144
     4f4:	91 e0       	ldi	r25, 0x01	; 1
     4f6:	98 a3       	std	Y+32, r25	; 0x20
     4f8:	8f 8f       	std	Y+31, r24	; 0x1f
     4fa:	8f 8d       	ldd	r24, Y+31	; 0x1f
     4fc:	98 a1       	ldd	r25, Y+32	; 0x20
     4fe:	01 97       	sbiw	r24, 0x01	; 1
     500:	f1 f7       	brne	.-4      	; 0x4fe <main+0x468>
     502:	98 a3       	std	Y+32, r25	; 0x20
     504:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     506:	89 a1       	ldd	r24, Y+33	; 0x21
     508:	9a a1       	ldd	r25, Y+34	; 0x22
     50a:	01 97       	sbiw	r24, 0x01	; 1
     50c:	9a a3       	std	Y+34, r25	; 0x22
     50e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     510:	89 a1       	ldd	r24, Y+33	; 0x21
     512:	9a a1       	ldd	r25, Y+34	; 0x22
     514:	00 97       	sbiw	r24, 0x00	; 0
     516:	69 f7       	brne	.-38     	; 0x4f2 <main+0x45c>
     518:	14 c0       	rjmp	.+40     	; 0x542 <main+0x4ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     51a:	6b a1       	ldd	r22, Y+35	; 0x23
     51c:	7c a1       	ldd	r23, Y+36	; 0x24
     51e:	8d a1       	ldd	r24, Y+37	; 0x25
     520:	9e a1       	ldd	r25, Y+38	; 0x26
     522:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     526:	dc 01       	movw	r26, r24
     528:	cb 01       	movw	r24, r22
     52a:	9a a3       	std	Y+34, r25	; 0x22
     52c:	89 a3       	std	Y+33, r24	; 0x21
     52e:	89 a1       	ldd	r24, Y+33	; 0x21
     530:	9a a1       	ldd	r25, Y+34	; 0x22
     532:	9e 8f       	std	Y+30, r25	; 0x1e
     534:	8d 8f       	std	Y+29, r24	; 0x1d
     536:	8d 8d       	ldd	r24, Y+29	; 0x1d
     538:	9e 8d       	ldd	r25, Y+30	; 0x1e
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	f1 f7       	brne	.-4      	; 0x53a <main+0x4a4>
     53e:	9e 8f       	std	Y+30, r25	; 0x1e
     540:	8d 8f       	std	Y+29, r24	; 0x1d
        _delay_ms(200);
        OCR1A = 900;
     542:	e8 e8       	ldi	r30, 0x88	; 136
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	84 e8       	ldi	r24, 0x84	; 132
     548:	93 e0       	ldi	r25, 0x03	; 3
     54a:	91 83       	std	Z+1, r25	; 0x01
     54c:	80 83       	st	Z, r24
     54e:	80 e0       	ldi	r24, 0x00	; 0
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	a8 e4       	ldi	r26, 0x48	; 72
     554:	b3 e4       	ldi	r27, 0x43	; 67
     556:	89 8f       	std	Y+25, r24	; 0x19
     558:	9a 8f       	std	Y+26, r25	; 0x1a
     55a:	ab 8f       	std	Y+27, r26	; 0x1b
     55c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     55e:	69 8d       	ldd	r22, Y+25	; 0x19
     560:	7a 8d       	ldd	r23, Y+26	; 0x1a
     562:	8b 8d       	ldd	r24, Y+27	; 0x1b
     564:	9c 8d       	ldd	r25, Y+28	; 0x1c
     566:	20 e0       	ldi	r18, 0x00	; 0
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	4a e7       	ldi	r20, 0x7A	; 122
     56c:	55 e4       	ldi	r21, 0x45	; 69
     56e:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     572:	dc 01       	movw	r26, r24
     574:	cb 01       	movw	r24, r22
     576:	8d 8b       	std	Y+21, r24	; 0x15
     578:	9e 8b       	std	Y+22, r25	; 0x16
     57a:	af 8b       	std	Y+23, r26	; 0x17
     57c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     57e:	6d 89       	ldd	r22, Y+21	; 0x15
     580:	7e 89       	ldd	r23, Y+22	; 0x16
     582:	8f 89       	ldd	r24, Y+23	; 0x17
     584:	98 8d       	ldd	r25, Y+24	; 0x18
     586:	20 e0       	ldi	r18, 0x00	; 0
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	40 e8       	ldi	r20, 0x80	; 128
     58c:	5f e3       	ldi	r21, 0x3F	; 63
     58e:	0e 94 c2 06 	call	0xd84	; 0xd84 <__ltsf2>
     592:	88 23       	and	r24, r24
     594:	2c f4       	brge	.+10     	; 0x5a0 <main+0x50a>
		__ticks = 1;
     596:	81 e0       	ldi	r24, 0x01	; 1
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	9c 8b       	std	Y+20, r25	; 0x14
     59c:	8b 8b       	std	Y+19, r24	; 0x13
     59e:	3f c0       	rjmp	.+126    	; 0x61e <main+0x588>
	else if (__tmp > 65535)
     5a0:	6d 89       	ldd	r22, Y+21	; 0x15
     5a2:	7e 89       	ldd	r23, Y+22	; 0x16
     5a4:	8f 89       	ldd	r24, Y+23	; 0x17
     5a6:	98 8d       	ldd	r25, Y+24	; 0x18
     5a8:	20 e0       	ldi	r18, 0x00	; 0
     5aa:	3f ef       	ldi	r19, 0xFF	; 255
     5ac:	4f e7       	ldi	r20, 0x7F	; 127
     5ae:	57 e4       	ldi	r21, 0x47	; 71
     5b0:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__gtsf2>
     5b4:	18 16       	cp	r1, r24
     5b6:	4c f5       	brge	.+82     	; 0x60a <main+0x574>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5b8:	69 8d       	ldd	r22, Y+25	; 0x19
     5ba:	7a 8d       	ldd	r23, Y+26	; 0x1a
     5bc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     5be:	9c 8d       	ldd	r25, Y+28	; 0x1c
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	40 e2       	ldi	r20, 0x20	; 32
     5c6:	51 e4       	ldi	r21, 0x41	; 65
     5c8:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     5cc:	dc 01       	movw	r26, r24
     5ce:	cb 01       	movw	r24, r22
     5d0:	bc 01       	movw	r22, r24
     5d2:	cd 01       	movw	r24, r26
     5d4:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     5d8:	dc 01       	movw	r26, r24
     5da:	cb 01       	movw	r24, r22
     5dc:	9c 8b       	std	Y+20, r25	; 0x14
     5de:	8b 8b       	std	Y+19, r24	; 0x13
     5e0:	0f c0       	rjmp	.+30     	; 0x600 <main+0x56a>
     5e2:	80 e9       	ldi	r24, 0x90	; 144
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	9a 8b       	std	Y+18, r25	; 0x12
     5e8:	89 8b       	std	Y+17, r24	; 0x11
     5ea:	89 89       	ldd	r24, Y+17	; 0x11
     5ec:	9a 89       	ldd	r25, Y+18	; 0x12
     5ee:	01 97       	sbiw	r24, 0x01	; 1
     5f0:	f1 f7       	brne	.-4      	; 0x5ee <main+0x558>
     5f2:	9a 8b       	std	Y+18, r25	; 0x12
     5f4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5f6:	8b 89       	ldd	r24, Y+19	; 0x13
     5f8:	9c 89       	ldd	r25, Y+20	; 0x14
     5fa:	01 97       	sbiw	r24, 0x01	; 1
     5fc:	9c 8b       	std	Y+20, r25	; 0x14
     5fe:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     600:	8b 89       	ldd	r24, Y+19	; 0x13
     602:	9c 89       	ldd	r25, Y+20	; 0x14
     604:	00 97       	sbiw	r24, 0x00	; 0
     606:	69 f7       	brne	.-38     	; 0x5e2 <main+0x54c>
     608:	14 c0       	rjmp	.+40     	; 0x632 <main+0x59c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     60a:	6d 89       	ldd	r22, Y+21	; 0x15
     60c:	7e 89       	ldd	r23, Y+22	; 0x16
     60e:	8f 89       	ldd	r24, Y+23	; 0x17
     610:	98 8d       	ldd	r25, Y+24	; 0x18
     612:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     616:	dc 01       	movw	r26, r24
     618:	cb 01       	movw	r24, r22
     61a:	9c 8b       	std	Y+20, r25	; 0x14
     61c:	8b 8b       	std	Y+19, r24	; 0x13
     61e:	8b 89       	ldd	r24, Y+19	; 0x13
     620:	9c 89       	ldd	r25, Y+20	; 0x14
     622:	98 8b       	std	Y+16, r25	; 0x10
     624:	8f 87       	std	Y+15, r24	; 0x0f
     626:	8f 85       	ldd	r24, Y+15	; 0x0f
     628:	98 89       	ldd	r25, Y+16	; 0x10
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <main+0x594>
     62e:	98 8b       	std	Y+16, r25	; 0x10
     630:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(200);
        OCR1A = 1024;
     632:	e8 e8       	ldi	r30, 0x88	; 136
     634:	f0 e0       	ldi	r31, 0x00	; 0
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	94 e0       	ldi	r25, 0x04	; 4
     63a:	91 83       	std	Z+1, r25	; 0x01
     63c:	80 83       	st	Z, r24
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	a8 e4       	ldi	r26, 0x48	; 72
     644:	b3 e4       	ldi	r27, 0x43	; 67
     646:	8b 87       	std	Y+11, r24	; 0x0b
     648:	9c 87       	std	Y+12, r25	; 0x0c
     64a:	ad 87       	std	Y+13, r26	; 0x0d
     64c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     64e:	6b 85       	ldd	r22, Y+11	; 0x0b
     650:	7c 85       	ldd	r23, Y+12	; 0x0c
     652:	8d 85       	ldd	r24, Y+13	; 0x0d
     654:	9e 85       	ldd	r25, Y+14	; 0x0e
     656:	20 e0       	ldi	r18, 0x00	; 0
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	4a e7       	ldi	r20, 0x7A	; 122
     65c:	55 e4       	ldi	r21, 0x45	; 69
     65e:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     662:	dc 01       	movw	r26, r24
     664:	cb 01       	movw	r24, r22
     666:	8f 83       	std	Y+7, r24	; 0x07
     668:	98 87       	std	Y+8, r25	; 0x08
     66a:	a9 87       	std	Y+9, r26	; 0x09
     66c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     66e:	6f 81       	ldd	r22, Y+7	; 0x07
     670:	78 85       	ldd	r23, Y+8	; 0x08
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	9a 85       	ldd	r25, Y+10	; 0x0a
     676:	20 e0       	ldi	r18, 0x00	; 0
     678:	30 e0       	ldi	r19, 0x00	; 0
     67a:	40 e8       	ldi	r20, 0x80	; 128
     67c:	5f e3       	ldi	r21, 0x3F	; 63
     67e:	0e 94 c2 06 	call	0xd84	; 0xd84 <__ltsf2>
     682:	88 23       	and	r24, r24
     684:	2c f4       	brge	.+10     	; 0x690 <main+0x5fa>
		__ticks = 1;
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	9e 83       	std	Y+6, r25	; 0x06
     68c:	8d 83       	std	Y+5, r24	; 0x05
     68e:	3f c0       	rjmp	.+126    	; 0x70e <main+0x678>
	else if (__tmp > 65535)
     690:	6f 81       	ldd	r22, Y+7	; 0x07
     692:	78 85       	ldd	r23, Y+8	; 0x08
     694:	89 85       	ldd	r24, Y+9	; 0x09
     696:	9a 85       	ldd	r25, Y+10	; 0x0a
     698:	20 e0       	ldi	r18, 0x00	; 0
     69a:	3f ef       	ldi	r19, 0xFF	; 255
     69c:	4f e7       	ldi	r20, 0x7F	; 127
     69e:	57 e4       	ldi	r21, 0x47	; 71
     6a0:	0e 94 62 06 	call	0xcc4	; 0xcc4 <__gtsf2>
     6a4:	18 16       	cp	r1, r24
     6a6:	4c f5       	brge	.+82     	; 0x6fa <main+0x664>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6a8:	6b 85       	ldd	r22, Y+11	; 0x0b
     6aa:	7c 85       	ldd	r23, Y+12	; 0x0c
     6ac:	8d 85       	ldd	r24, Y+13	; 0x0d
     6ae:	9e 85       	ldd	r25, Y+14	; 0x0e
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	40 e2       	ldi	r20, 0x20	; 32
     6b6:	51 e4       	ldi	r21, 0x41	; 65
     6b8:	0e 94 68 05 	call	0xad0	; 0xad0 <__mulsf3>
     6bc:	dc 01       	movw	r26, r24
     6be:	cb 01       	movw	r24, r22
     6c0:	bc 01       	movw	r22, r24
     6c2:	cd 01       	movw	r24, r26
     6c4:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     6c8:	dc 01       	movw	r26, r24
     6ca:	cb 01       	movw	r24, r22
     6cc:	9e 83       	std	Y+6, r25	; 0x06
     6ce:	8d 83       	std	Y+5, r24	; 0x05
     6d0:	0f c0       	rjmp	.+30     	; 0x6f0 <main+0x65a>
     6d2:	80 e9       	ldi	r24, 0x90	; 144
     6d4:	91 e0       	ldi	r25, 0x01	; 1
     6d6:	9c 83       	std	Y+4, r25	; 0x04
     6d8:	8b 83       	std	Y+3, r24	; 0x03
     6da:	8b 81       	ldd	r24, Y+3	; 0x03
     6dc:	9c 81       	ldd	r25, Y+4	; 0x04
     6de:	01 97       	sbiw	r24, 0x01	; 1
     6e0:	f1 f7       	brne	.-4      	; 0x6de <main+0x648>
     6e2:	9c 83       	std	Y+4, r25	; 0x04
     6e4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6e6:	8d 81       	ldd	r24, Y+5	; 0x05
     6e8:	9e 81       	ldd	r25, Y+6	; 0x06
     6ea:	01 97       	sbiw	r24, 0x01	; 1
     6ec:	9e 83       	std	Y+6, r25	; 0x06
     6ee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6f0:	8d 81       	ldd	r24, Y+5	; 0x05
     6f2:	9e 81       	ldd	r25, Y+6	; 0x06
     6f4:	00 97       	sbiw	r24, 0x00	; 0
     6f6:	69 f7       	brne	.-38     	; 0x6d2 <main+0x63c>
     6f8:	f0 cc       	rjmp	.-1568   	; 0xda <main+0x44>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6fa:	6f 81       	ldd	r22, Y+7	; 0x07
     6fc:	78 85       	ldd	r23, Y+8	; 0x08
     6fe:	89 85       	ldd	r24, Y+9	; 0x09
     700:	9a 85       	ldd	r25, Y+10	; 0x0a
     702:	0e 94 92 03 	call	0x724	; 0x724 <__fixunssfsi>
     706:	dc 01       	movw	r26, r24
     708:	cb 01       	movw	r24, r22
     70a:	9e 83       	std	Y+6, r25	; 0x06
     70c:	8d 83       	std	Y+5, r24	; 0x05
     70e:	8d 81       	ldd	r24, Y+5	; 0x05
     710:	9e 81       	ldd	r25, Y+6	; 0x06
     712:	9a 83       	std	Y+2, r25	; 0x02
     714:	89 83       	std	Y+1, r24	; 0x01
     716:	89 81       	ldd	r24, Y+1	; 0x01
     718:	9a 81       	ldd	r25, Y+2	; 0x02
     71a:	01 97       	sbiw	r24, 0x01	; 1
     71c:	f1 f7       	brne	.-4      	; 0x71a <main+0x684>
     71e:	9a 83       	std	Y+2, r25	; 0x02
     720:	89 83       	std	Y+1, r24	; 0x01
     722:	db cc       	rjmp	.-1610   	; 0xda <main+0x44>

00000724 <__fixunssfsi>:
     724:	ef 92       	push	r14
     726:	ff 92       	push	r15
     728:	0f 93       	push	r16
     72a:	1f 93       	push	r17
     72c:	7b 01       	movw	r14, r22
     72e:	8c 01       	movw	r16, r24
     730:	20 e0       	ldi	r18, 0x00	; 0
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	40 e0       	ldi	r20, 0x00	; 0
     736:	5f e4       	ldi	r21, 0x4F	; 79
     738:	0e 94 92 06 	call	0xd24	; 0xd24 <__gesf2>
     73c:	88 23       	and	r24, r24
     73e:	8c f0       	brlt	.+34     	; 0x762 <__fixunssfsi+0x3e>
     740:	c8 01       	movw	r24, r16
     742:	b7 01       	movw	r22, r14
     744:	20 e0       	ldi	r18, 0x00	; 0
     746:	30 e0       	ldi	r19, 0x00	; 0
     748:	40 e0       	ldi	r20, 0x00	; 0
     74a:	5f e4       	ldi	r21, 0x4F	; 79
     74c:	0e 94 0a 05 	call	0xa14	; 0xa14 <__subsf3>
     750:	0e 94 f2 06 	call	0xde4	; 0xde4 <__fixsfsi>
     754:	9b 01       	movw	r18, r22
     756:	ac 01       	movw	r20, r24
     758:	20 50       	subi	r18, 0x00	; 0
     75a:	30 40       	sbci	r19, 0x00	; 0
     75c:	40 40       	sbci	r20, 0x00	; 0
     75e:	50 48       	sbci	r21, 0x80	; 128
     760:	06 c0       	rjmp	.+12     	; 0x76e <__fixunssfsi+0x4a>
     762:	c8 01       	movw	r24, r16
     764:	b7 01       	movw	r22, r14
     766:	0e 94 f2 06 	call	0xde4	; 0xde4 <__fixsfsi>
     76a:	9b 01       	movw	r18, r22
     76c:	ac 01       	movw	r20, r24
     76e:	b9 01       	movw	r22, r18
     770:	ca 01       	movw	r24, r20
     772:	1f 91       	pop	r17
     774:	0f 91       	pop	r16
     776:	ff 90       	pop	r15
     778:	ef 90       	pop	r14
     77a:	08 95       	ret

0000077c <_fpadd_parts>:
     77c:	a0 e0       	ldi	r26, 0x00	; 0
     77e:	b0 e0       	ldi	r27, 0x00	; 0
     780:	e4 ec       	ldi	r30, 0xC4	; 196
     782:	f3 e0       	ldi	r31, 0x03	; 3
     784:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__prologue_saves__>
     788:	dc 01       	movw	r26, r24
     78a:	2b 01       	movw	r4, r22
     78c:	fa 01       	movw	r30, r20
     78e:	9c 91       	ld	r25, X
     790:	92 30       	cpi	r25, 0x02	; 2
     792:	08 f4       	brcc	.+2      	; 0x796 <_fpadd_parts+0x1a>
     794:	39 c1       	rjmp	.+626    	; 0xa08 <__stack+0x109>
     796:	eb 01       	movw	r28, r22
     798:	88 81       	ld	r24, Y
     79a:	82 30       	cpi	r24, 0x02	; 2
     79c:	08 f4       	brcc	.+2      	; 0x7a0 <_fpadd_parts+0x24>
     79e:	33 c1       	rjmp	.+614    	; 0xa06 <__stack+0x107>
     7a0:	94 30       	cpi	r25, 0x04	; 4
     7a2:	69 f4       	brne	.+26     	; 0x7be <_fpadd_parts+0x42>
     7a4:	84 30       	cpi	r24, 0x04	; 4
     7a6:	09 f0       	breq	.+2      	; 0x7aa <_fpadd_parts+0x2e>
     7a8:	2f c1       	rjmp	.+606    	; 0xa08 <__stack+0x109>
     7aa:	11 96       	adiw	r26, 0x01	; 1
     7ac:	9c 91       	ld	r25, X
     7ae:	11 97       	sbiw	r26, 0x01	; 1
     7b0:	89 81       	ldd	r24, Y+1	; 0x01
     7b2:	98 17       	cp	r25, r24
     7b4:	09 f4       	brne	.+2      	; 0x7b8 <_fpadd_parts+0x3c>
     7b6:	28 c1       	rjmp	.+592    	; 0xa08 <__stack+0x109>
     7b8:	a0 e0       	ldi	r26, 0x00	; 0
     7ba:	b1 e0       	ldi	r27, 0x01	; 1
     7bc:	25 c1       	rjmp	.+586    	; 0xa08 <__stack+0x109>
     7be:	84 30       	cpi	r24, 0x04	; 4
     7c0:	09 f4       	brne	.+2      	; 0x7c4 <_fpadd_parts+0x48>
     7c2:	21 c1       	rjmp	.+578    	; 0xa06 <__stack+0x107>
     7c4:	82 30       	cpi	r24, 0x02	; 2
     7c6:	a9 f4       	brne	.+42     	; 0x7f2 <_fpadd_parts+0x76>
     7c8:	92 30       	cpi	r25, 0x02	; 2
     7ca:	09 f0       	breq	.+2      	; 0x7ce <_fpadd_parts+0x52>
     7cc:	1d c1       	rjmp	.+570    	; 0xa08 <__stack+0x109>
     7ce:	9a 01       	movw	r18, r20
     7d0:	ad 01       	movw	r20, r26
     7d2:	88 e0       	ldi	r24, 0x08	; 8
     7d4:	ea 01       	movw	r28, r20
     7d6:	09 90       	ld	r0, Y+
     7d8:	ae 01       	movw	r20, r28
     7da:	e9 01       	movw	r28, r18
     7dc:	09 92       	st	Y+, r0
     7de:	9e 01       	movw	r18, r28
     7e0:	81 50       	subi	r24, 0x01	; 1
     7e2:	c1 f7       	brne	.-16     	; 0x7d4 <_fpadd_parts+0x58>
     7e4:	e2 01       	movw	r28, r4
     7e6:	89 81       	ldd	r24, Y+1	; 0x01
     7e8:	11 96       	adiw	r26, 0x01	; 1
     7ea:	9c 91       	ld	r25, X
     7ec:	89 23       	and	r24, r25
     7ee:	81 83       	std	Z+1, r24	; 0x01
     7f0:	08 c1       	rjmp	.+528    	; 0xa02 <__stack+0x103>
     7f2:	92 30       	cpi	r25, 0x02	; 2
     7f4:	09 f4       	brne	.+2      	; 0x7f8 <_fpadd_parts+0x7c>
     7f6:	07 c1       	rjmp	.+526    	; 0xa06 <__stack+0x107>
     7f8:	12 96       	adiw	r26, 0x02	; 2
     7fa:	2d 90       	ld	r2, X+
     7fc:	3c 90       	ld	r3, X
     7fe:	13 97       	sbiw	r26, 0x03	; 3
     800:	eb 01       	movw	r28, r22
     802:	8a 81       	ldd	r24, Y+2	; 0x02
     804:	9b 81       	ldd	r25, Y+3	; 0x03
     806:	14 96       	adiw	r26, 0x04	; 4
     808:	ad 90       	ld	r10, X+
     80a:	bd 90       	ld	r11, X+
     80c:	cd 90       	ld	r12, X+
     80e:	dc 90       	ld	r13, X
     810:	17 97       	sbiw	r26, 0x07	; 7
     812:	ec 80       	ldd	r14, Y+4	; 0x04
     814:	fd 80       	ldd	r15, Y+5	; 0x05
     816:	0e 81       	ldd	r16, Y+6	; 0x06
     818:	1f 81       	ldd	r17, Y+7	; 0x07
     81a:	91 01       	movw	r18, r2
     81c:	28 1b       	sub	r18, r24
     81e:	39 0b       	sbc	r19, r25
     820:	b9 01       	movw	r22, r18
     822:	37 ff       	sbrs	r19, 7
     824:	04 c0       	rjmp	.+8      	; 0x82e <_fpadd_parts+0xb2>
     826:	66 27       	eor	r22, r22
     828:	77 27       	eor	r23, r23
     82a:	62 1b       	sub	r22, r18
     82c:	73 0b       	sbc	r23, r19
     82e:	60 32       	cpi	r22, 0x20	; 32
     830:	71 05       	cpc	r23, r1
     832:	0c f0       	brlt	.+2      	; 0x836 <_fpadd_parts+0xba>
     834:	61 c0       	rjmp	.+194    	; 0x8f8 <_fpadd_parts+0x17c>
     836:	12 16       	cp	r1, r18
     838:	13 06       	cpc	r1, r19
     83a:	6c f5       	brge	.+90     	; 0x896 <_fpadd_parts+0x11a>
     83c:	37 01       	movw	r6, r14
     83e:	48 01       	movw	r8, r16
     840:	06 2e       	mov	r0, r22
     842:	04 c0       	rjmp	.+8      	; 0x84c <_fpadd_parts+0xd0>
     844:	96 94       	lsr	r9
     846:	87 94       	ror	r8
     848:	77 94       	ror	r7
     84a:	67 94       	ror	r6
     84c:	0a 94       	dec	r0
     84e:	d2 f7       	brpl	.-12     	; 0x844 <_fpadd_parts+0xc8>
     850:	21 e0       	ldi	r18, 0x01	; 1
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	40 e0       	ldi	r20, 0x00	; 0
     856:	50 e0       	ldi	r21, 0x00	; 0
     858:	04 c0       	rjmp	.+8      	; 0x862 <_fpadd_parts+0xe6>
     85a:	22 0f       	add	r18, r18
     85c:	33 1f       	adc	r19, r19
     85e:	44 1f       	adc	r20, r20
     860:	55 1f       	adc	r21, r21
     862:	6a 95       	dec	r22
     864:	d2 f7       	brpl	.-12     	; 0x85a <_fpadd_parts+0xde>
     866:	21 50       	subi	r18, 0x01	; 1
     868:	30 40       	sbci	r19, 0x00	; 0
     86a:	40 40       	sbci	r20, 0x00	; 0
     86c:	50 40       	sbci	r21, 0x00	; 0
     86e:	2e 21       	and	r18, r14
     870:	3f 21       	and	r19, r15
     872:	40 23       	and	r20, r16
     874:	51 23       	and	r21, r17
     876:	21 15       	cp	r18, r1
     878:	31 05       	cpc	r19, r1
     87a:	41 05       	cpc	r20, r1
     87c:	51 05       	cpc	r21, r1
     87e:	21 f0       	breq	.+8      	; 0x888 <_fpadd_parts+0x10c>
     880:	21 e0       	ldi	r18, 0x01	; 1
     882:	30 e0       	ldi	r19, 0x00	; 0
     884:	40 e0       	ldi	r20, 0x00	; 0
     886:	50 e0       	ldi	r21, 0x00	; 0
     888:	79 01       	movw	r14, r18
     88a:	8a 01       	movw	r16, r20
     88c:	e6 28       	or	r14, r6
     88e:	f7 28       	or	r15, r7
     890:	08 29       	or	r16, r8
     892:	19 29       	or	r17, r9
     894:	3c c0       	rjmp	.+120    	; 0x90e <__stack+0xf>
     896:	23 2b       	or	r18, r19
     898:	d1 f1       	breq	.+116    	; 0x90e <__stack+0xf>
     89a:	26 0e       	add	r2, r22
     89c:	37 1e       	adc	r3, r23
     89e:	35 01       	movw	r6, r10
     8a0:	46 01       	movw	r8, r12
     8a2:	06 2e       	mov	r0, r22
     8a4:	04 c0       	rjmp	.+8      	; 0x8ae <_fpadd_parts+0x132>
     8a6:	96 94       	lsr	r9
     8a8:	87 94       	ror	r8
     8aa:	77 94       	ror	r7
     8ac:	67 94       	ror	r6
     8ae:	0a 94       	dec	r0
     8b0:	d2 f7       	brpl	.-12     	; 0x8a6 <_fpadd_parts+0x12a>
     8b2:	21 e0       	ldi	r18, 0x01	; 1
     8b4:	30 e0       	ldi	r19, 0x00	; 0
     8b6:	40 e0       	ldi	r20, 0x00	; 0
     8b8:	50 e0       	ldi	r21, 0x00	; 0
     8ba:	04 c0       	rjmp	.+8      	; 0x8c4 <_fpadd_parts+0x148>
     8bc:	22 0f       	add	r18, r18
     8be:	33 1f       	adc	r19, r19
     8c0:	44 1f       	adc	r20, r20
     8c2:	55 1f       	adc	r21, r21
     8c4:	6a 95       	dec	r22
     8c6:	d2 f7       	brpl	.-12     	; 0x8bc <_fpadd_parts+0x140>
     8c8:	21 50       	subi	r18, 0x01	; 1
     8ca:	30 40       	sbci	r19, 0x00	; 0
     8cc:	40 40       	sbci	r20, 0x00	; 0
     8ce:	50 40       	sbci	r21, 0x00	; 0
     8d0:	2a 21       	and	r18, r10
     8d2:	3b 21       	and	r19, r11
     8d4:	4c 21       	and	r20, r12
     8d6:	5d 21       	and	r21, r13
     8d8:	21 15       	cp	r18, r1
     8da:	31 05       	cpc	r19, r1
     8dc:	41 05       	cpc	r20, r1
     8de:	51 05       	cpc	r21, r1
     8e0:	21 f0       	breq	.+8      	; 0x8ea <_fpadd_parts+0x16e>
     8e2:	21 e0       	ldi	r18, 0x01	; 1
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e0       	ldi	r20, 0x00	; 0
     8e8:	50 e0       	ldi	r21, 0x00	; 0
     8ea:	59 01       	movw	r10, r18
     8ec:	6a 01       	movw	r12, r20
     8ee:	a6 28       	or	r10, r6
     8f0:	b7 28       	or	r11, r7
     8f2:	c8 28       	or	r12, r8
     8f4:	d9 28       	or	r13, r9
     8f6:	0b c0       	rjmp	.+22     	; 0x90e <__stack+0xf>
     8f8:	82 15       	cp	r24, r2
     8fa:	93 05       	cpc	r25, r3
     8fc:	2c f0       	brlt	.+10     	; 0x908 <__stack+0x9>
     8fe:	1c 01       	movw	r2, r24
     900:	aa 24       	eor	r10, r10
     902:	bb 24       	eor	r11, r11
     904:	65 01       	movw	r12, r10
     906:	03 c0       	rjmp	.+6      	; 0x90e <__stack+0xf>
     908:	ee 24       	eor	r14, r14
     90a:	ff 24       	eor	r15, r15
     90c:	87 01       	movw	r16, r14
     90e:	11 96       	adiw	r26, 0x01	; 1
     910:	9c 91       	ld	r25, X
     912:	d2 01       	movw	r26, r4
     914:	11 96       	adiw	r26, 0x01	; 1
     916:	8c 91       	ld	r24, X
     918:	98 17       	cp	r25, r24
     91a:	09 f4       	brne	.+2      	; 0x91e <__stack+0x1f>
     91c:	45 c0       	rjmp	.+138    	; 0x9a8 <__stack+0xa9>
     91e:	99 23       	and	r25, r25
     920:	39 f0       	breq	.+14     	; 0x930 <__stack+0x31>
     922:	a8 01       	movw	r20, r16
     924:	97 01       	movw	r18, r14
     926:	2a 19       	sub	r18, r10
     928:	3b 09       	sbc	r19, r11
     92a:	4c 09       	sbc	r20, r12
     92c:	5d 09       	sbc	r21, r13
     92e:	06 c0       	rjmp	.+12     	; 0x93c <__stack+0x3d>
     930:	a6 01       	movw	r20, r12
     932:	95 01       	movw	r18, r10
     934:	2e 19       	sub	r18, r14
     936:	3f 09       	sbc	r19, r15
     938:	40 0b       	sbc	r20, r16
     93a:	51 0b       	sbc	r21, r17
     93c:	57 fd       	sbrc	r21, 7
     93e:	08 c0       	rjmp	.+16     	; 0x950 <__stack+0x51>
     940:	11 82       	std	Z+1, r1	; 0x01
     942:	33 82       	std	Z+3, r3	; 0x03
     944:	22 82       	std	Z+2, r2	; 0x02
     946:	24 83       	std	Z+4, r18	; 0x04
     948:	35 83       	std	Z+5, r19	; 0x05
     94a:	46 83       	std	Z+6, r20	; 0x06
     94c:	57 83       	std	Z+7, r21	; 0x07
     94e:	1d c0       	rjmp	.+58     	; 0x98a <__stack+0x8b>
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	81 83       	std	Z+1, r24	; 0x01
     954:	33 82       	std	Z+3, r3	; 0x03
     956:	22 82       	std	Z+2, r2	; 0x02
     958:	88 27       	eor	r24, r24
     95a:	99 27       	eor	r25, r25
     95c:	dc 01       	movw	r26, r24
     95e:	82 1b       	sub	r24, r18
     960:	93 0b       	sbc	r25, r19
     962:	a4 0b       	sbc	r26, r20
     964:	b5 0b       	sbc	r27, r21
     966:	84 83       	std	Z+4, r24	; 0x04
     968:	95 83       	std	Z+5, r25	; 0x05
     96a:	a6 83       	std	Z+6, r26	; 0x06
     96c:	b7 83       	std	Z+7, r27	; 0x07
     96e:	0d c0       	rjmp	.+26     	; 0x98a <__stack+0x8b>
     970:	22 0f       	add	r18, r18
     972:	33 1f       	adc	r19, r19
     974:	44 1f       	adc	r20, r20
     976:	55 1f       	adc	r21, r21
     978:	24 83       	std	Z+4, r18	; 0x04
     97a:	35 83       	std	Z+5, r19	; 0x05
     97c:	46 83       	std	Z+6, r20	; 0x06
     97e:	57 83       	std	Z+7, r21	; 0x07
     980:	82 81       	ldd	r24, Z+2	; 0x02
     982:	93 81       	ldd	r25, Z+3	; 0x03
     984:	01 97       	sbiw	r24, 0x01	; 1
     986:	93 83       	std	Z+3, r25	; 0x03
     988:	82 83       	std	Z+2, r24	; 0x02
     98a:	24 81       	ldd	r18, Z+4	; 0x04
     98c:	35 81       	ldd	r19, Z+5	; 0x05
     98e:	46 81       	ldd	r20, Z+6	; 0x06
     990:	57 81       	ldd	r21, Z+7	; 0x07
     992:	da 01       	movw	r26, r20
     994:	c9 01       	movw	r24, r18
     996:	01 97       	sbiw	r24, 0x01	; 1
     998:	a1 09       	sbc	r26, r1
     99a:	b1 09       	sbc	r27, r1
     99c:	8f 5f       	subi	r24, 0xFF	; 255
     99e:	9f 4f       	sbci	r25, 0xFF	; 255
     9a0:	af 4f       	sbci	r26, 0xFF	; 255
     9a2:	bf 43       	sbci	r27, 0x3F	; 63
     9a4:	28 f3       	brcs	.-54     	; 0x970 <__stack+0x71>
     9a6:	0b c0       	rjmp	.+22     	; 0x9be <__stack+0xbf>
     9a8:	91 83       	std	Z+1, r25	; 0x01
     9aa:	33 82       	std	Z+3, r3	; 0x03
     9ac:	22 82       	std	Z+2, r2	; 0x02
     9ae:	ea 0c       	add	r14, r10
     9b0:	fb 1c       	adc	r15, r11
     9b2:	0c 1d       	adc	r16, r12
     9b4:	1d 1d       	adc	r17, r13
     9b6:	e4 82       	std	Z+4, r14	; 0x04
     9b8:	f5 82       	std	Z+5, r15	; 0x05
     9ba:	06 83       	std	Z+6, r16	; 0x06
     9bc:	17 83       	std	Z+7, r17	; 0x07
     9be:	83 e0       	ldi	r24, 0x03	; 3
     9c0:	80 83       	st	Z, r24
     9c2:	24 81       	ldd	r18, Z+4	; 0x04
     9c4:	35 81       	ldd	r19, Z+5	; 0x05
     9c6:	46 81       	ldd	r20, Z+6	; 0x06
     9c8:	57 81       	ldd	r21, Z+7	; 0x07
     9ca:	57 ff       	sbrs	r21, 7
     9cc:	1a c0       	rjmp	.+52     	; 0xa02 <__stack+0x103>
     9ce:	c9 01       	movw	r24, r18
     9d0:	aa 27       	eor	r26, r26
     9d2:	97 fd       	sbrc	r25, 7
     9d4:	a0 95       	com	r26
     9d6:	ba 2f       	mov	r27, r26
     9d8:	81 70       	andi	r24, 0x01	; 1
     9da:	90 70       	andi	r25, 0x00	; 0
     9dc:	a0 70       	andi	r26, 0x00	; 0
     9de:	b0 70       	andi	r27, 0x00	; 0
     9e0:	56 95       	lsr	r21
     9e2:	47 95       	ror	r20
     9e4:	37 95       	ror	r19
     9e6:	27 95       	ror	r18
     9e8:	82 2b       	or	r24, r18
     9ea:	93 2b       	or	r25, r19
     9ec:	a4 2b       	or	r26, r20
     9ee:	b5 2b       	or	r27, r21
     9f0:	84 83       	std	Z+4, r24	; 0x04
     9f2:	95 83       	std	Z+5, r25	; 0x05
     9f4:	a6 83       	std	Z+6, r26	; 0x06
     9f6:	b7 83       	std	Z+7, r27	; 0x07
     9f8:	82 81       	ldd	r24, Z+2	; 0x02
     9fa:	93 81       	ldd	r25, Z+3	; 0x03
     9fc:	01 96       	adiw	r24, 0x01	; 1
     9fe:	93 83       	std	Z+3, r25	; 0x03
     a00:	82 83       	std	Z+2, r24	; 0x02
     a02:	df 01       	movw	r26, r30
     a04:	01 c0       	rjmp	.+2      	; 0xa08 <__stack+0x109>
     a06:	d2 01       	movw	r26, r4
     a08:	cd 01       	movw	r24, r26
     a0a:	cd b7       	in	r28, 0x3d	; 61
     a0c:	de b7       	in	r29, 0x3e	; 62
     a0e:	e2 e1       	ldi	r30, 0x12	; 18
     a10:	0c 94 08 09 	jmp	0x1210	; 0x1210 <__epilogue_restores__>

00000a14 <__subsf3>:
     a14:	a0 e2       	ldi	r26, 0x20	; 32
     a16:	b0 e0       	ldi	r27, 0x00	; 0
     a18:	e0 e1       	ldi	r30, 0x10	; 16
     a1a:	f5 e0       	ldi	r31, 0x05	; 5
     a1c:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__prologue_saves__+0x18>
     a20:	69 83       	std	Y+1, r22	; 0x01
     a22:	7a 83       	std	Y+2, r23	; 0x02
     a24:	8b 83       	std	Y+3, r24	; 0x03
     a26:	9c 83       	std	Y+4, r25	; 0x04
     a28:	2d 83       	std	Y+5, r18	; 0x05
     a2a:	3e 83       	std	Y+6, r19	; 0x06
     a2c:	4f 83       	std	Y+7, r20	; 0x07
     a2e:	58 87       	std	Y+8, r21	; 0x08
     a30:	e9 e0       	ldi	r30, 0x09	; 9
     a32:	ee 2e       	mov	r14, r30
     a34:	f1 2c       	mov	r15, r1
     a36:	ec 0e       	add	r14, r28
     a38:	fd 1e       	adc	r15, r29
     a3a:	ce 01       	movw	r24, r28
     a3c:	01 96       	adiw	r24, 0x01	; 1
     a3e:	b7 01       	movw	r22, r14
     a40:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     a44:	8e 01       	movw	r16, r28
     a46:	0f 5e       	subi	r16, 0xEF	; 239
     a48:	1f 4f       	sbci	r17, 0xFF	; 255
     a4a:	ce 01       	movw	r24, r28
     a4c:	05 96       	adiw	r24, 0x05	; 5
     a4e:	b8 01       	movw	r22, r16
     a50:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     a54:	8a 89       	ldd	r24, Y+18	; 0x12
     a56:	91 e0       	ldi	r25, 0x01	; 1
     a58:	89 27       	eor	r24, r25
     a5a:	8a 8b       	std	Y+18, r24	; 0x12
     a5c:	c7 01       	movw	r24, r14
     a5e:	b8 01       	movw	r22, r16
     a60:	ae 01       	movw	r20, r28
     a62:	47 5e       	subi	r20, 0xE7	; 231
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	0e 94 be 03 	call	0x77c	; 0x77c <_fpadd_parts>
     a6a:	0e 94 46 07 	call	0xe8c	; 0xe8c <__pack_f>
     a6e:	a0 96       	adiw	r28, 0x20	; 32
     a70:	e6 e0       	ldi	r30, 0x06	; 6
     a72:	0c 94 14 09 	jmp	0x1228	; 0x1228 <__epilogue_restores__+0x18>

00000a76 <__addsf3>:
     a76:	a0 e2       	ldi	r26, 0x20	; 32
     a78:	b0 e0       	ldi	r27, 0x00	; 0
     a7a:	e1 e4       	ldi	r30, 0x41	; 65
     a7c:	f5 e0       	ldi	r31, 0x05	; 5
     a7e:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__prologue_saves__+0x18>
     a82:	69 83       	std	Y+1, r22	; 0x01
     a84:	7a 83       	std	Y+2, r23	; 0x02
     a86:	8b 83       	std	Y+3, r24	; 0x03
     a88:	9c 83       	std	Y+4, r25	; 0x04
     a8a:	2d 83       	std	Y+5, r18	; 0x05
     a8c:	3e 83       	std	Y+6, r19	; 0x06
     a8e:	4f 83       	std	Y+7, r20	; 0x07
     a90:	58 87       	std	Y+8, r21	; 0x08
     a92:	f9 e0       	ldi	r31, 0x09	; 9
     a94:	ef 2e       	mov	r14, r31
     a96:	f1 2c       	mov	r15, r1
     a98:	ec 0e       	add	r14, r28
     a9a:	fd 1e       	adc	r15, r29
     a9c:	ce 01       	movw	r24, r28
     a9e:	01 96       	adiw	r24, 0x01	; 1
     aa0:	b7 01       	movw	r22, r14
     aa2:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     aa6:	8e 01       	movw	r16, r28
     aa8:	0f 5e       	subi	r16, 0xEF	; 239
     aaa:	1f 4f       	sbci	r17, 0xFF	; 255
     aac:	ce 01       	movw	r24, r28
     aae:	05 96       	adiw	r24, 0x05	; 5
     ab0:	b8 01       	movw	r22, r16
     ab2:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     ab6:	c7 01       	movw	r24, r14
     ab8:	b8 01       	movw	r22, r16
     aba:	ae 01       	movw	r20, r28
     abc:	47 5e       	subi	r20, 0xE7	; 231
     abe:	5f 4f       	sbci	r21, 0xFF	; 255
     ac0:	0e 94 be 03 	call	0x77c	; 0x77c <_fpadd_parts>
     ac4:	0e 94 46 07 	call	0xe8c	; 0xe8c <__pack_f>
     ac8:	a0 96       	adiw	r28, 0x20	; 32
     aca:	e6 e0       	ldi	r30, 0x06	; 6
     acc:	0c 94 14 09 	jmp	0x1228	; 0x1228 <__epilogue_restores__+0x18>

00000ad0 <__mulsf3>:
     ad0:	a0 e2       	ldi	r26, 0x20	; 32
     ad2:	b0 e0       	ldi	r27, 0x00	; 0
     ad4:	ee e6       	ldi	r30, 0x6E	; 110
     ad6:	f5 e0       	ldi	r31, 0x05	; 5
     ad8:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__prologue_saves__>
     adc:	69 83       	std	Y+1, r22	; 0x01
     ade:	7a 83       	std	Y+2, r23	; 0x02
     ae0:	8b 83       	std	Y+3, r24	; 0x03
     ae2:	9c 83       	std	Y+4, r25	; 0x04
     ae4:	2d 83       	std	Y+5, r18	; 0x05
     ae6:	3e 83       	std	Y+6, r19	; 0x06
     ae8:	4f 83       	std	Y+7, r20	; 0x07
     aea:	58 87       	std	Y+8, r21	; 0x08
     aec:	ce 01       	movw	r24, r28
     aee:	01 96       	adiw	r24, 0x01	; 1
     af0:	be 01       	movw	r22, r28
     af2:	67 5f       	subi	r22, 0xF7	; 247
     af4:	7f 4f       	sbci	r23, 0xFF	; 255
     af6:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     afa:	ce 01       	movw	r24, r28
     afc:	05 96       	adiw	r24, 0x05	; 5
     afe:	be 01       	movw	r22, r28
     b00:	6f 5e       	subi	r22, 0xEF	; 239
     b02:	7f 4f       	sbci	r23, 0xFF	; 255
     b04:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     b08:	99 85       	ldd	r25, Y+9	; 0x09
     b0a:	92 30       	cpi	r25, 0x02	; 2
     b0c:	88 f0       	brcs	.+34     	; 0xb30 <__mulsf3+0x60>
     b0e:	89 89       	ldd	r24, Y+17	; 0x11
     b10:	82 30       	cpi	r24, 0x02	; 2
     b12:	c8 f0       	brcs	.+50     	; 0xb46 <__mulsf3+0x76>
     b14:	94 30       	cpi	r25, 0x04	; 4
     b16:	19 f4       	brne	.+6      	; 0xb1e <__mulsf3+0x4e>
     b18:	82 30       	cpi	r24, 0x02	; 2
     b1a:	51 f4       	brne	.+20     	; 0xb30 <__mulsf3+0x60>
     b1c:	04 c0       	rjmp	.+8      	; 0xb26 <__mulsf3+0x56>
     b1e:	84 30       	cpi	r24, 0x04	; 4
     b20:	29 f4       	brne	.+10     	; 0xb2c <__mulsf3+0x5c>
     b22:	92 30       	cpi	r25, 0x02	; 2
     b24:	81 f4       	brne	.+32     	; 0xb46 <__mulsf3+0x76>
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	91 e0       	ldi	r25, 0x01	; 1
     b2a:	c6 c0       	rjmp	.+396    	; 0xcb8 <__mulsf3+0x1e8>
     b2c:	92 30       	cpi	r25, 0x02	; 2
     b2e:	49 f4       	brne	.+18     	; 0xb42 <__mulsf3+0x72>
     b30:	20 e0       	ldi	r18, 0x00	; 0
     b32:	9a 85       	ldd	r25, Y+10	; 0x0a
     b34:	8a 89       	ldd	r24, Y+18	; 0x12
     b36:	98 13       	cpse	r25, r24
     b38:	21 e0       	ldi	r18, 0x01	; 1
     b3a:	2a 87       	std	Y+10, r18	; 0x0a
     b3c:	ce 01       	movw	r24, r28
     b3e:	09 96       	adiw	r24, 0x09	; 9
     b40:	bb c0       	rjmp	.+374    	; 0xcb8 <__mulsf3+0x1e8>
     b42:	82 30       	cpi	r24, 0x02	; 2
     b44:	49 f4       	brne	.+18     	; 0xb58 <__mulsf3+0x88>
     b46:	20 e0       	ldi	r18, 0x00	; 0
     b48:	9a 85       	ldd	r25, Y+10	; 0x0a
     b4a:	8a 89       	ldd	r24, Y+18	; 0x12
     b4c:	98 13       	cpse	r25, r24
     b4e:	21 e0       	ldi	r18, 0x01	; 1
     b50:	2a 8b       	std	Y+18, r18	; 0x12
     b52:	ce 01       	movw	r24, r28
     b54:	41 96       	adiw	r24, 0x11	; 17
     b56:	b0 c0       	rjmp	.+352    	; 0xcb8 <__mulsf3+0x1e8>
     b58:	2d 84       	ldd	r2, Y+13	; 0x0d
     b5a:	3e 84       	ldd	r3, Y+14	; 0x0e
     b5c:	4f 84       	ldd	r4, Y+15	; 0x0f
     b5e:	58 88       	ldd	r5, Y+16	; 0x10
     b60:	6d 88       	ldd	r6, Y+21	; 0x15
     b62:	7e 88       	ldd	r7, Y+22	; 0x16
     b64:	8f 88       	ldd	r8, Y+23	; 0x17
     b66:	98 8c       	ldd	r9, Y+24	; 0x18
     b68:	ee 24       	eor	r14, r14
     b6a:	ff 24       	eor	r15, r15
     b6c:	87 01       	movw	r16, r14
     b6e:	aa 24       	eor	r10, r10
     b70:	bb 24       	eor	r11, r11
     b72:	65 01       	movw	r12, r10
     b74:	40 e0       	ldi	r20, 0x00	; 0
     b76:	50 e0       	ldi	r21, 0x00	; 0
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	70 e0       	ldi	r23, 0x00	; 0
     b7c:	e0 e0       	ldi	r30, 0x00	; 0
     b7e:	f0 e0       	ldi	r31, 0x00	; 0
     b80:	c1 01       	movw	r24, r2
     b82:	81 70       	andi	r24, 0x01	; 1
     b84:	90 70       	andi	r25, 0x00	; 0
     b86:	89 2b       	or	r24, r25
     b88:	e9 f0       	breq	.+58     	; 0xbc4 <__mulsf3+0xf4>
     b8a:	e6 0c       	add	r14, r6
     b8c:	f7 1c       	adc	r15, r7
     b8e:	08 1d       	adc	r16, r8
     b90:	19 1d       	adc	r17, r9
     b92:	9a 01       	movw	r18, r20
     b94:	ab 01       	movw	r20, r22
     b96:	2a 0d       	add	r18, r10
     b98:	3b 1d       	adc	r19, r11
     b9a:	4c 1d       	adc	r20, r12
     b9c:	5d 1d       	adc	r21, r13
     b9e:	80 e0       	ldi	r24, 0x00	; 0
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	a0 e0       	ldi	r26, 0x00	; 0
     ba4:	b0 e0       	ldi	r27, 0x00	; 0
     ba6:	e6 14       	cp	r14, r6
     ba8:	f7 04       	cpc	r15, r7
     baa:	08 05       	cpc	r16, r8
     bac:	19 05       	cpc	r17, r9
     bae:	20 f4       	brcc	.+8      	; 0xbb8 <__mulsf3+0xe8>
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	a0 e0       	ldi	r26, 0x00	; 0
     bb6:	b0 e0       	ldi	r27, 0x00	; 0
     bb8:	ba 01       	movw	r22, r20
     bba:	a9 01       	movw	r20, r18
     bbc:	48 0f       	add	r20, r24
     bbe:	59 1f       	adc	r21, r25
     bc0:	6a 1f       	adc	r22, r26
     bc2:	7b 1f       	adc	r23, r27
     bc4:	aa 0c       	add	r10, r10
     bc6:	bb 1c       	adc	r11, r11
     bc8:	cc 1c       	adc	r12, r12
     bca:	dd 1c       	adc	r13, r13
     bcc:	97 fe       	sbrs	r9, 7
     bce:	08 c0       	rjmp	.+16     	; 0xbe0 <__mulsf3+0x110>
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	a0 e0       	ldi	r26, 0x00	; 0
     bd6:	b0 e0       	ldi	r27, 0x00	; 0
     bd8:	a8 2a       	or	r10, r24
     bda:	b9 2a       	or	r11, r25
     bdc:	ca 2a       	or	r12, r26
     bde:	db 2a       	or	r13, r27
     be0:	31 96       	adiw	r30, 0x01	; 1
     be2:	e0 32       	cpi	r30, 0x20	; 32
     be4:	f1 05       	cpc	r31, r1
     be6:	49 f0       	breq	.+18     	; 0xbfa <__mulsf3+0x12a>
     be8:	66 0c       	add	r6, r6
     bea:	77 1c       	adc	r7, r7
     bec:	88 1c       	adc	r8, r8
     bee:	99 1c       	adc	r9, r9
     bf0:	56 94       	lsr	r5
     bf2:	47 94       	ror	r4
     bf4:	37 94       	ror	r3
     bf6:	27 94       	ror	r2
     bf8:	c3 cf       	rjmp	.-122    	; 0xb80 <__mulsf3+0xb0>
     bfa:	fa 85       	ldd	r31, Y+10	; 0x0a
     bfc:	ea 89       	ldd	r30, Y+18	; 0x12
     bfe:	2b 89       	ldd	r18, Y+19	; 0x13
     c00:	3c 89       	ldd	r19, Y+20	; 0x14
     c02:	8b 85       	ldd	r24, Y+11	; 0x0b
     c04:	9c 85       	ldd	r25, Y+12	; 0x0c
     c06:	28 0f       	add	r18, r24
     c08:	39 1f       	adc	r19, r25
     c0a:	2e 5f       	subi	r18, 0xFE	; 254
     c0c:	3f 4f       	sbci	r19, 0xFF	; 255
     c0e:	17 c0       	rjmp	.+46     	; 0xc3e <__mulsf3+0x16e>
     c10:	ca 01       	movw	r24, r20
     c12:	81 70       	andi	r24, 0x01	; 1
     c14:	90 70       	andi	r25, 0x00	; 0
     c16:	89 2b       	or	r24, r25
     c18:	61 f0       	breq	.+24     	; 0xc32 <__mulsf3+0x162>
     c1a:	16 95       	lsr	r17
     c1c:	07 95       	ror	r16
     c1e:	f7 94       	ror	r15
     c20:	e7 94       	ror	r14
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	a0 e0       	ldi	r26, 0x00	; 0
     c28:	b0 e8       	ldi	r27, 0x80	; 128
     c2a:	e8 2a       	or	r14, r24
     c2c:	f9 2a       	or	r15, r25
     c2e:	0a 2b       	or	r16, r26
     c30:	1b 2b       	or	r17, r27
     c32:	76 95       	lsr	r23
     c34:	67 95       	ror	r22
     c36:	57 95       	ror	r21
     c38:	47 95       	ror	r20
     c3a:	2f 5f       	subi	r18, 0xFF	; 255
     c3c:	3f 4f       	sbci	r19, 0xFF	; 255
     c3e:	77 fd       	sbrc	r23, 7
     c40:	e7 cf       	rjmp	.-50     	; 0xc10 <__mulsf3+0x140>
     c42:	0c c0       	rjmp	.+24     	; 0xc5c <__mulsf3+0x18c>
     c44:	44 0f       	add	r20, r20
     c46:	55 1f       	adc	r21, r21
     c48:	66 1f       	adc	r22, r22
     c4a:	77 1f       	adc	r23, r23
     c4c:	17 fd       	sbrc	r17, 7
     c4e:	41 60       	ori	r20, 0x01	; 1
     c50:	ee 0c       	add	r14, r14
     c52:	ff 1c       	adc	r15, r15
     c54:	00 1f       	adc	r16, r16
     c56:	11 1f       	adc	r17, r17
     c58:	21 50       	subi	r18, 0x01	; 1
     c5a:	30 40       	sbci	r19, 0x00	; 0
     c5c:	40 30       	cpi	r20, 0x00	; 0
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	59 07       	cpc	r21, r25
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	69 07       	cpc	r22, r25
     c66:	90 e4       	ldi	r25, 0x40	; 64
     c68:	79 07       	cpc	r23, r25
     c6a:	60 f3       	brcs	.-40     	; 0xc44 <__mulsf3+0x174>
     c6c:	2b 8f       	std	Y+27, r18	; 0x1b
     c6e:	3c 8f       	std	Y+28, r19	; 0x1c
     c70:	db 01       	movw	r26, r22
     c72:	ca 01       	movw	r24, r20
     c74:	8f 77       	andi	r24, 0x7F	; 127
     c76:	90 70       	andi	r25, 0x00	; 0
     c78:	a0 70       	andi	r26, 0x00	; 0
     c7a:	b0 70       	andi	r27, 0x00	; 0
     c7c:	80 34       	cpi	r24, 0x40	; 64
     c7e:	91 05       	cpc	r25, r1
     c80:	a1 05       	cpc	r26, r1
     c82:	b1 05       	cpc	r27, r1
     c84:	61 f4       	brne	.+24     	; 0xc9e <__mulsf3+0x1ce>
     c86:	47 fd       	sbrc	r20, 7
     c88:	0a c0       	rjmp	.+20     	; 0xc9e <__mulsf3+0x1ce>
     c8a:	e1 14       	cp	r14, r1
     c8c:	f1 04       	cpc	r15, r1
     c8e:	01 05       	cpc	r16, r1
     c90:	11 05       	cpc	r17, r1
     c92:	29 f0       	breq	.+10     	; 0xc9e <__mulsf3+0x1ce>
     c94:	40 5c       	subi	r20, 0xC0	; 192
     c96:	5f 4f       	sbci	r21, 0xFF	; 255
     c98:	6f 4f       	sbci	r22, 0xFF	; 255
     c9a:	7f 4f       	sbci	r23, 0xFF	; 255
     c9c:	40 78       	andi	r20, 0x80	; 128
     c9e:	1a 8e       	std	Y+26, r1	; 0x1a
     ca0:	fe 17       	cp	r31, r30
     ca2:	11 f0       	breq	.+4      	; 0xca8 <__mulsf3+0x1d8>
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	8a 8f       	std	Y+26, r24	; 0x1a
     ca8:	4d 8f       	std	Y+29, r20	; 0x1d
     caa:	5e 8f       	std	Y+30, r21	; 0x1e
     cac:	6f 8f       	std	Y+31, r22	; 0x1f
     cae:	78 a3       	std	Y+32, r23	; 0x20
     cb0:	83 e0       	ldi	r24, 0x03	; 3
     cb2:	89 8f       	std	Y+25, r24	; 0x19
     cb4:	ce 01       	movw	r24, r28
     cb6:	49 96       	adiw	r24, 0x19	; 25
     cb8:	0e 94 46 07 	call	0xe8c	; 0xe8c <__pack_f>
     cbc:	a0 96       	adiw	r28, 0x20	; 32
     cbe:	e2 e1       	ldi	r30, 0x12	; 18
     cc0:	0c 94 08 09 	jmp	0x1210	; 0x1210 <__epilogue_restores__>

00000cc4 <__gtsf2>:
     cc4:	a8 e1       	ldi	r26, 0x18	; 24
     cc6:	b0 e0       	ldi	r27, 0x00	; 0
     cc8:	e8 e6       	ldi	r30, 0x68	; 104
     cca:	f6 e0       	ldi	r31, 0x06	; 6
     ccc:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__prologue_saves__+0x18>
     cd0:	69 83       	std	Y+1, r22	; 0x01
     cd2:	7a 83       	std	Y+2, r23	; 0x02
     cd4:	8b 83       	std	Y+3, r24	; 0x03
     cd6:	9c 83       	std	Y+4, r25	; 0x04
     cd8:	2d 83       	std	Y+5, r18	; 0x05
     cda:	3e 83       	std	Y+6, r19	; 0x06
     cdc:	4f 83       	std	Y+7, r20	; 0x07
     cde:	58 87       	std	Y+8, r21	; 0x08
     ce0:	89 e0       	ldi	r24, 0x09	; 9
     ce2:	e8 2e       	mov	r14, r24
     ce4:	f1 2c       	mov	r15, r1
     ce6:	ec 0e       	add	r14, r28
     ce8:	fd 1e       	adc	r15, r29
     cea:	ce 01       	movw	r24, r28
     cec:	01 96       	adiw	r24, 0x01	; 1
     cee:	b7 01       	movw	r22, r14
     cf0:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     cf4:	8e 01       	movw	r16, r28
     cf6:	0f 5e       	subi	r16, 0xEF	; 239
     cf8:	1f 4f       	sbci	r17, 0xFF	; 255
     cfa:	ce 01       	movw	r24, r28
     cfc:	05 96       	adiw	r24, 0x05	; 5
     cfe:	b8 01       	movw	r22, r16
     d00:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     d04:	89 85       	ldd	r24, Y+9	; 0x09
     d06:	82 30       	cpi	r24, 0x02	; 2
     d08:	40 f0       	brcs	.+16     	; 0xd1a <__gtsf2+0x56>
     d0a:	89 89       	ldd	r24, Y+17	; 0x11
     d0c:	82 30       	cpi	r24, 0x02	; 2
     d0e:	28 f0       	brcs	.+10     	; 0xd1a <__gtsf2+0x56>
     d10:	c7 01       	movw	r24, r14
     d12:	b8 01       	movw	r22, r16
     d14:	0e 94 93 08 	call	0x1126	; 0x1126 <__fpcmp_parts_f>
     d18:	01 c0       	rjmp	.+2      	; 0xd1c <__gtsf2+0x58>
     d1a:	8f ef       	ldi	r24, 0xFF	; 255
     d1c:	68 96       	adiw	r28, 0x18	; 24
     d1e:	e6 e0       	ldi	r30, 0x06	; 6
     d20:	0c 94 14 09 	jmp	0x1228	; 0x1228 <__epilogue_restores__+0x18>

00000d24 <__gesf2>:
     d24:	a8 e1       	ldi	r26, 0x18	; 24
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	e8 e9       	ldi	r30, 0x98	; 152
     d2a:	f6 e0       	ldi	r31, 0x06	; 6
     d2c:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__prologue_saves__+0x18>
     d30:	69 83       	std	Y+1, r22	; 0x01
     d32:	7a 83       	std	Y+2, r23	; 0x02
     d34:	8b 83       	std	Y+3, r24	; 0x03
     d36:	9c 83       	std	Y+4, r25	; 0x04
     d38:	2d 83       	std	Y+5, r18	; 0x05
     d3a:	3e 83       	std	Y+6, r19	; 0x06
     d3c:	4f 83       	std	Y+7, r20	; 0x07
     d3e:	58 87       	std	Y+8, r21	; 0x08
     d40:	89 e0       	ldi	r24, 0x09	; 9
     d42:	e8 2e       	mov	r14, r24
     d44:	f1 2c       	mov	r15, r1
     d46:	ec 0e       	add	r14, r28
     d48:	fd 1e       	adc	r15, r29
     d4a:	ce 01       	movw	r24, r28
     d4c:	01 96       	adiw	r24, 0x01	; 1
     d4e:	b7 01       	movw	r22, r14
     d50:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     d54:	8e 01       	movw	r16, r28
     d56:	0f 5e       	subi	r16, 0xEF	; 239
     d58:	1f 4f       	sbci	r17, 0xFF	; 255
     d5a:	ce 01       	movw	r24, r28
     d5c:	05 96       	adiw	r24, 0x05	; 5
     d5e:	b8 01       	movw	r22, r16
     d60:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     d64:	89 85       	ldd	r24, Y+9	; 0x09
     d66:	82 30       	cpi	r24, 0x02	; 2
     d68:	40 f0       	brcs	.+16     	; 0xd7a <__gesf2+0x56>
     d6a:	89 89       	ldd	r24, Y+17	; 0x11
     d6c:	82 30       	cpi	r24, 0x02	; 2
     d6e:	28 f0       	brcs	.+10     	; 0xd7a <__gesf2+0x56>
     d70:	c7 01       	movw	r24, r14
     d72:	b8 01       	movw	r22, r16
     d74:	0e 94 93 08 	call	0x1126	; 0x1126 <__fpcmp_parts_f>
     d78:	01 c0       	rjmp	.+2      	; 0xd7c <__gesf2+0x58>
     d7a:	8f ef       	ldi	r24, 0xFF	; 255
     d7c:	68 96       	adiw	r28, 0x18	; 24
     d7e:	e6 e0       	ldi	r30, 0x06	; 6
     d80:	0c 94 14 09 	jmp	0x1228	; 0x1228 <__epilogue_restores__+0x18>

00000d84 <__ltsf2>:
     d84:	a8 e1       	ldi	r26, 0x18	; 24
     d86:	b0 e0       	ldi	r27, 0x00	; 0
     d88:	e8 ec       	ldi	r30, 0xC8	; 200
     d8a:	f6 e0       	ldi	r31, 0x06	; 6
     d8c:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__prologue_saves__+0x18>
     d90:	69 83       	std	Y+1, r22	; 0x01
     d92:	7a 83       	std	Y+2, r23	; 0x02
     d94:	8b 83       	std	Y+3, r24	; 0x03
     d96:	9c 83       	std	Y+4, r25	; 0x04
     d98:	2d 83       	std	Y+5, r18	; 0x05
     d9a:	3e 83       	std	Y+6, r19	; 0x06
     d9c:	4f 83       	std	Y+7, r20	; 0x07
     d9e:	58 87       	std	Y+8, r21	; 0x08
     da0:	89 e0       	ldi	r24, 0x09	; 9
     da2:	e8 2e       	mov	r14, r24
     da4:	f1 2c       	mov	r15, r1
     da6:	ec 0e       	add	r14, r28
     da8:	fd 1e       	adc	r15, r29
     daa:	ce 01       	movw	r24, r28
     dac:	01 96       	adiw	r24, 0x01	; 1
     dae:	b7 01       	movw	r22, r14
     db0:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     db4:	8e 01       	movw	r16, r28
     db6:	0f 5e       	subi	r16, 0xEF	; 239
     db8:	1f 4f       	sbci	r17, 0xFF	; 255
     dba:	ce 01       	movw	r24, r28
     dbc:	05 96       	adiw	r24, 0x05	; 5
     dbe:	b8 01       	movw	r22, r16
     dc0:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     dc4:	89 85       	ldd	r24, Y+9	; 0x09
     dc6:	82 30       	cpi	r24, 0x02	; 2
     dc8:	40 f0       	brcs	.+16     	; 0xdda <__ltsf2+0x56>
     dca:	89 89       	ldd	r24, Y+17	; 0x11
     dcc:	82 30       	cpi	r24, 0x02	; 2
     dce:	28 f0       	brcs	.+10     	; 0xdda <__ltsf2+0x56>
     dd0:	c7 01       	movw	r24, r14
     dd2:	b8 01       	movw	r22, r16
     dd4:	0e 94 93 08 	call	0x1126	; 0x1126 <__fpcmp_parts_f>
     dd8:	01 c0       	rjmp	.+2      	; 0xddc <__ltsf2+0x58>
     dda:	81 e0       	ldi	r24, 0x01	; 1
     ddc:	68 96       	adiw	r28, 0x18	; 24
     dde:	e6 e0       	ldi	r30, 0x06	; 6
     de0:	0c 94 14 09 	jmp	0x1228	; 0x1228 <__epilogue_restores__+0x18>

00000de4 <__fixsfsi>:
     de4:	ac e0       	ldi	r26, 0x0C	; 12
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	e8 ef       	ldi	r30, 0xF8	; 248
     dea:	f6 e0       	ldi	r31, 0x06	; 6
     dec:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__prologue_saves__+0x20>
     df0:	69 83       	std	Y+1, r22	; 0x01
     df2:	7a 83       	std	Y+2, r23	; 0x02
     df4:	8b 83       	std	Y+3, r24	; 0x03
     df6:	9c 83       	std	Y+4, r25	; 0x04
     df8:	ce 01       	movw	r24, r28
     dfa:	01 96       	adiw	r24, 0x01	; 1
     dfc:	be 01       	movw	r22, r28
     dfe:	6b 5f       	subi	r22, 0xFB	; 251
     e00:	7f 4f       	sbci	r23, 0xFF	; 255
     e02:	0e 94 1b 08 	call	0x1036	; 0x1036 <__unpack_f>
     e06:	8d 81       	ldd	r24, Y+5	; 0x05
     e08:	82 30       	cpi	r24, 0x02	; 2
     e0a:	61 f1       	breq	.+88     	; 0xe64 <__fixsfsi+0x80>
     e0c:	82 30       	cpi	r24, 0x02	; 2
     e0e:	50 f1       	brcs	.+84     	; 0xe64 <__fixsfsi+0x80>
     e10:	84 30       	cpi	r24, 0x04	; 4
     e12:	21 f4       	brne	.+8      	; 0xe1c <__fixsfsi+0x38>
     e14:	8e 81       	ldd	r24, Y+6	; 0x06
     e16:	88 23       	and	r24, r24
     e18:	51 f1       	breq	.+84     	; 0xe6e <__fixsfsi+0x8a>
     e1a:	2e c0       	rjmp	.+92     	; 0xe78 <__fixsfsi+0x94>
     e1c:	2f 81       	ldd	r18, Y+7	; 0x07
     e1e:	38 85       	ldd	r19, Y+8	; 0x08
     e20:	37 fd       	sbrc	r19, 7
     e22:	20 c0       	rjmp	.+64     	; 0xe64 <__fixsfsi+0x80>
     e24:	6e 81       	ldd	r22, Y+6	; 0x06
     e26:	2f 31       	cpi	r18, 0x1F	; 31
     e28:	31 05       	cpc	r19, r1
     e2a:	1c f0       	brlt	.+6      	; 0xe32 <__fixsfsi+0x4e>
     e2c:	66 23       	and	r22, r22
     e2e:	f9 f0       	breq	.+62     	; 0xe6e <__fixsfsi+0x8a>
     e30:	23 c0       	rjmp	.+70     	; 0xe78 <__fixsfsi+0x94>
     e32:	8e e1       	ldi	r24, 0x1E	; 30
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	82 1b       	sub	r24, r18
     e38:	93 0b       	sbc	r25, r19
     e3a:	29 85       	ldd	r18, Y+9	; 0x09
     e3c:	3a 85       	ldd	r19, Y+10	; 0x0a
     e3e:	4b 85       	ldd	r20, Y+11	; 0x0b
     e40:	5c 85       	ldd	r21, Y+12	; 0x0c
     e42:	04 c0       	rjmp	.+8      	; 0xe4c <__fixsfsi+0x68>
     e44:	56 95       	lsr	r21
     e46:	47 95       	ror	r20
     e48:	37 95       	ror	r19
     e4a:	27 95       	ror	r18
     e4c:	8a 95       	dec	r24
     e4e:	d2 f7       	brpl	.-12     	; 0xe44 <__fixsfsi+0x60>
     e50:	66 23       	and	r22, r22
     e52:	b1 f0       	breq	.+44     	; 0xe80 <__fixsfsi+0x9c>
     e54:	50 95       	com	r21
     e56:	40 95       	com	r20
     e58:	30 95       	com	r19
     e5a:	21 95       	neg	r18
     e5c:	3f 4f       	sbci	r19, 0xFF	; 255
     e5e:	4f 4f       	sbci	r20, 0xFF	; 255
     e60:	5f 4f       	sbci	r21, 0xFF	; 255
     e62:	0e c0       	rjmp	.+28     	; 0xe80 <__fixsfsi+0x9c>
     e64:	20 e0       	ldi	r18, 0x00	; 0
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	40 e0       	ldi	r20, 0x00	; 0
     e6a:	50 e0       	ldi	r21, 0x00	; 0
     e6c:	09 c0       	rjmp	.+18     	; 0xe80 <__fixsfsi+0x9c>
     e6e:	2f ef       	ldi	r18, 0xFF	; 255
     e70:	3f ef       	ldi	r19, 0xFF	; 255
     e72:	4f ef       	ldi	r20, 0xFF	; 255
     e74:	5f e7       	ldi	r21, 0x7F	; 127
     e76:	04 c0       	rjmp	.+8      	; 0xe80 <__fixsfsi+0x9c>
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	40 e0       	ldi	r20, 0x00	; 0
     e7e:	50 e8       	ldi	r21, 0x80	; 128
     e80:	b9 01       	movw	r22, r18
     e82:	ca 01       	movw	r24, r20
     e84:	2c 96       	adiw	r28, 0x0c	; 12
     e86:	e2 e0       	ldi	r30, 0x02	; 2
     e88:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__epilogue_restores__+0x20>

00000e8c <__pack_f>:
     e8c:	df 92       	push	r13
     e8e:	ef 92       	push	r14
     e90:	ff 92       	push	r15
     e92:	0f 93       	push	r16
     e94:	1f 93       	push	r17
     e96:	fc 01       	movw	r30, r24
     e98:	e4 80       	ldd	r14, Z+4	; 0x04
     e9a:	f5 80       	ldd	r15, Z+5	; 0x05
     e9c:	06 81       	ldd	r16, Z+6	; 0x06
     e9e:	17 81       	ldd	r17, Z+7	; 0x07
     ea0:	d1 80       	ldd	r13, Z+1	; 0x01
     ea2:	80 81       	ld	r24, Z
     ea4:	82 30       	cpi	r24, 0x02	; 2
     ea6:	48 f4       	brcc	.+18     	; 0xeba <__pack_f+0x2e>
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	a0 e1       	ldi	r26, 0x10	; 16
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	e8 2a       	or	r14, r24
     eb2:	f9 2a       	or	r15, r25
     eb4:	0a 2b       	or	r16, r26
     eb6:	1b 2b       	or	r17, r27
     eb8:	a5 c0       	rjmp	.+330    	; 0x1004 <__pack_f+0x178>
     eba:	84 30       	cpi	r24, 0x04	; 4
     ebc:	09 f4       	brne	.+2      	; 0xec0 <__pack_f+0x34>
     ebe:	9f c0       	rjmp	.+318    	; 0xffe <__pack_f+0x172>
     ec0:	82 30       	cpi	r24, 0x02	; 2
     ec2:	21 f4       	brne	.+8      	; 0xecc <__pack_f+0x40>
     ec4:	ee 24       	eor	r14, r14
     ec6:	ff 24       	eor	r15, r15
     ec8:	87 01       	movw	r16, r14
     eca:	05 c0       	rjmp	.+10     	; 0xed6 <__pack_f+0x4a>
     ecc:	e1 14       	cp	r14, r1
     ece:	f1 04       	cpc	r15, r1
     ed0:	01 05       	cpc	r16, r1
     ed2:	11 05       	cpc	r17, r1
     ed4:	19 f4       	brne	.+6      	; 0xedc <__pack_f+0x50>
     ed6:	e0 e0       	ldi	r30, 0x00	; 0
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	96 c0       	rjmp	.+300    	; 0x1008 <__pack_f+0x17c>
     edc:	62 81       	ldd	r22, Z+2	; 0x02
     ede:	73 81       	ldd	r23, Z+3	; 0x03
     ee0:	9f ef       	ldi	r25, 0xFF	; 255
     ee2:	62 38       	cpi	r22, 0x82	; 130
     ee4:	79 07       	cpc	r23, r25
     ee6:	0c f0       	brlt	.+2      	; 0xeea <__pack_f+0x5e>
     ee8:	5b c0       	rjmp	.+182    	; 0xfa0 <__pack_f+0x114>
     eea:	22 e8       	ldi	r18, 0x82	; 130
     eec:	3f ef       	ldi	r19, 0xFF	; 255
     eee:	26 1b       	sub	r18, r22
     ef0:	37 0b       	sbc	r19, r23
     ef2:	2a 31       	cpi	r18, 0x1A	; 26
     ef4:	31 05       	cpc	r19, r1
     ef6:	2c f0       	brlt	.+10     	; 0xf02 <__pack_f+0x76>
     ef8:	20 e0       	ldi	r18, 0x00	; 0
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	40 e0       	ldi	r20, 0x00	; 0
     efe:	50 e0       	ldi	r21, 0x00	; 0
     f00:	2a c0       	rjmp	.+84     	; 0xf56 <__pack_f+0xca>
     f02:	b8 01       	movw	r22, r16
     f04:	a7 01       	movw	r20, r14
     f06:	02 2e       	mov	r0, r18
     f08:	04 c0       	rjmp	.+8      	; 0xf12 <__pack_f+0x86>
     f0a:	76 95       	lsr	r23
     f0c:	67 95       	ror	r22
     f0e:	57 95       	ror	r21
     f10:	47 95       	ror	r20
     f12:	0a 94       	dec	r0
     f14:	d2 f7       	brpl	.-12     	; 0xf0a <__pack_f+0x7e>
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	a0 e0       	ldi	r26, 0x00	; 0
     f1c:	b0 e0       	ldi	r27, 0x00	; 0
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <__pack_f+0x9c>
     f20:	88 0f       	add	r24, r24
     f22:	99 1f       	adc	r25, r25
     f24:	aa 1f       	adc	r26, r26
     f26:	bb 1f       	adc	r27, r27
     f28:	2a 95       	dec	r18
     f2a:	d2 f7       	brpl	.-12     	; 0xf20 <__pack_f+0x94>
     f2c:	01 97       	sbiw	r24, 0x01	; 1
     f2e:	a1 09       	sbc	r26, r1
     f30:	b1 09       	sbc	r27, r1
     f32:	8e 21       	and	r24, r14
     f34:	9f 21       	and	r25, r15
     f36:	a0 23       	and	r26, r16
     f38:	b1 23       	and	r27, r17
     f3a:	00 97       	sbiw	r24, 0x00	; 0
     f3c:	a1 05       	cpc	r26, r1
     f3e:	b1 05       	cpc	r27, r1
     f40:	21 f0       	breq	.+8      	; 0xf4a <__pack_f+0xbe>
     f42:	81 e0       	ldi	r24, 0x01	; 1
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	a0 e0       	ldi	r26, 0x00	; 0
     f48:	b0 e0       	ldi	r27, 0x00	; 0
     f4a:	9a 01       	movw	r18, r20
     f4c:	ab 01       	movw	r20, r22
     f4e:	28 2b       	or	r18, r24
     f50:	39 2b       	or	r19, r25
     f52:	4a 2b       	or	r20, r26
     f54:	5b 2b       	or	r21, r27
     f56:	da 01       	movw	r26, r20
     f58:	c9 01       	movw	r24, r18
     f5a:	8f 77       	andi	r24, 0x7F	; 127
     f5c:	90 70       	andi	r25, 0x00	; 0
     f5e:	a0 70       	andi	r26, 0x00	; 0
     f60:	b0 70       	andi	r27, 0x00	; 0
     f62:	80 34       	cpi	r24, 0x40	; 64
     f64:	91 05       	cpc	r25, r1
     f66:	a1 05       	cpc	r26, r1
     f68:	b1 05       	cpc	r27, r1
     f6a:	39 f4       	brne	.+14     	; 0xf7a <__pack_f+0xee>
     f6c:	27 ff       	sbrs	r18, 7
     f6e:	09 c0       	rjmp	.+18     	; 0xf82 <__pack_f+0xf6>
     f70:	20 5c       	subi	r18, 0xC0	; 192
     f72:	3f 4f       	sbci	r19, 0xFF	; 255
     f74:	4f 4f       	sbci	r20, 0xFF	; 255
     f76:	5f 4f       	sbci	r21, 0xFF	; 255
     f78:	04 c0       	rjmp	.+8      	; 0xf82 <__pack_f+0xf6>
     f7a:	21 5c       	subi	r18, 0xC1	; 193
     f7c:	3f 4f       	sbci	r19, 0xFF	; 255
     f7e:	4f 4f       	sbci	r20, 0xFF	; 255
     f80:	5f 4f       	sbci	r21, 0xFF	; 255
     f82:	e0 e0       	ldi	r30, 0x00	; 0
     f84:	f0 e0       	ldi	r31, 0x00	; 0
     f86:	20 30       	cpi	r18, 0x00	; 0
     f88:	a0 e0       	ldi	r26, 0x00	; 0
     f8a:	3a 07       	cpc	r19, r26
     f8c:	a0 e0       	ldi	r26, 0x00	; 0
     f8e:	4a 07       	cpc	r20, r26
     f90:	a0 e4       	ldi	r26, 0x40	; 64
     f92:	5a 07       	cpc	r21, r26
     f94:	10 f0       	brcs	.+4      	; 0xf9a <__pack_f+0x10e>
     f96:	e1 e0       	ldi	r30, 0x01	; 1
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	79 01       	movw	r14, r18
     f9c:	8a 01       	movw	r16, r20
     f9e:	27 c0       	rjmp	.+78     	; 0xfee <__pack_f+0x162>
     fa0:	60 38       	cpi	r22, 0x80	; 128
     fa2:	71 05       	cpc	r23, r1
     fa4:	64 f5       	brge	.+88     	; 0xffe <__pack_f+0x172>
     fa6:	fb 01       	movw	r30, r22
     fa8:	e1 58       	subi	r30, 0x81	; 129
     faa:	ff 4f       	sbci	r31, 0xFF	; 255
     fac:	d8 01       	movw	r26, r16
     fae:	c7 01       	movw	r24, r14
     fb0:	8f 77       	andi	r24, 0x7F	; 127
     fb2:	90 70       	andi	r25, 0x00	; 0
     fb4:	a0 70       	andi	r26, 0x00	; 0
     fb6:	b0 70       	andi	r27, 0x00	; 0
     fb8:	80 34       	cpi	r24, 0x40	; 64
     fba:	91 05       	cpc	r25, r1
     fbc:	a1 05       	cpc	r26, r1
     fbe:	b1 05       	cpc	r27, r1
     fc0:	39 f4       	brne	.+14     	; 0xfd0 <__pack_f+0x144>
     fc2:	e7 fe       	sbrs	r14, 7
     fc4:	0d c0       	rjmp	.+26     	; 0xfe0 <__pack_f+0x154>
     fc6:	80 e4       	ldi	r24, 0x40	; 64
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	a0 e0       	ldi	r26, 0x00	; 0
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	04 c0       	rjmp	.+8      	; 0xfd8 <__pack_f+0x14c>
     fd0:	8f e3       	ldi	r24, 0x3F	; 63
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	a0 e0       	ldi	r26, 0x00	; 0
     fd6:	b0 e0       	ldi	r27, 0x00	; 0
     fd8:	e8 0e       	add	r14, r24
     fda:	f9 1e       	adc	r15, r25
     fdc:	0a 1f       	adc	r16, r26
     fde:	1b 1f       	adc	r17, r27
     fe0:	17 ff       	sbrs	r17, 7
     fe2:	05 c0       	rjmp	.+10     	; 0xfee <__pack_f+0x162>
     fe4:	16 95       	lsr	r17
     fe6:	07 95       	ror	r16
     fe8:	f7 94       	ror	r15
     fea:	e7 94       	ror	r14
     fec:	31 96       	adiw	r30, 0x01	; 1
     fee:	87 e0       	ldi	r24, 0x07	; 7
     ff0:	16 95       	lsr	r17
     ff2:	07 95       	ror	r16
     ff4:	f7 94       	ror	r15
     ff6:	e7 94       	ror	r14
     ff8:	8a 95       	dec	r24
     ffa:	d1 f7       	brne	.-12     	; 0xff0 <__pack_f+0x164>
     ffc:	05 c0       	rjmp	.+10     	; 0x1008 <__pack_f+0x17c>
     ffe:	ee 24       	eor	r14, r14
    1000:	ff 24       	eor	r15, r15
    1002:	87 01       	movw	r16, r14
    1004:	ef ef       	ldi	r30, 0xFF	; 255
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	6e 2f       	mov	r22, r30
    100a:	67 95       	ror	r22
    100c:	66 27       	eor	r22, r22
    100e:	67 95       	ror	r22
    1010:	90 2f       	mov	r25, r16
    1012:	9f 77       	andi	r25, 0x7F	; 127
    1014:	d7 94       	ror	r13
    1016:	dd 24       	eor	r13, r13
    1018:	d7 94       	ror	r13
    101a:	8e 2f       	mov	r24, r30
    101c:	86 95       	lsr	r24
    101e:	49 2f       	mov	r20, r25
    1020:	46 2b       	or	r20, r22
    1022:	58 2f       	mov	r21, r24
    1024:	5d 29       	or	r21, r13
    1026:	b7 01       	movw	r22, r14
    1028:	ca 01       	movw	r24, r20
    102a:	1f 91       	pop	r17
    102c:	0f 91       	pop	r16
    102e:	ff 90       	pop	r15
    1030:	ef 90       	pop	r14
    1032:	df 90       	pop	r13
    1034:	08 95       	ret

00001036 <__unpack_f>:
    1036:	fc 01       	movw	r30, r24
    1038:	db 01       	movw	r26, r22
    103a:	40 81       	ld	r20, Z
    103c:	51 81       	ldd	r21, Z+1	; 0x01
    103e:	22 81       	ldd	r18, Z+2	; 0x02
    1040:	62 2f       	mov	r22, r18
    1042:	6f 77       	andi	r22, 0x7F	; 127
    1044:	70 e0       	ldi	r23, 0x00	; 0
    1046:	22 1f       	adc	r18, r18
    1048:	22 27       	eor	r18, r18
    104a:	22 1f       	adc	r18, r18
    104c:	93 81       	ldd	r25, Z+3	; 0x03
    104e:	89 2f       	mov	r24, r25
    1050:	88 0f       	add	r24, r24
    1052:	82 2b       	or	r24, r18
    1054:	28 2f       	mov	r18, r24
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	99 1f       	adc	r25, r25
    105a:	99 27       	eor	r25, r25
    105c:	99 1f       	adc	r25, r25
    105e:	11 96       	adiw	r26, 0x01	; 1
    1060:	9c 93       	st	X, r25
    1062:	11 97       	sbiw	r26, 0x01	; 1
    1064:	21 15       	cp	r18, r1
    1066:	31 05       	cpc	r19, r1
    1068:	a9 f5       	brne	.+106    	; 0x10d4 <__unpack_f+0x9e>
    106a:	41 15       	cp	r20, r1
    106c:	51 05       	cpc	r21, r1
    106e:	61 05       	cpc	r22, r1
    1070:	71 05       	cpc	r23, r1
    1072:	11 f4       	brne	.+4      	; 0x1078 <__unpack_f+0x42>
    1074:	82 e0       	ldi	r24, 0x02	; 2
    1076:	37 c0       	rjmp	.+110    	; 0x10e6 <__unpack_f+0xb0>
    1078:	82 e8       	ldi	r24, 0x82	; 130
    107a:	9f ef       	ldi	r25, 0xFF	; 255
    107c:	13 96       	adiw	r26, 0x03	; 3
    107e:	9c 93       	st	X, r25
    1080:	8e 93       	st	-X, r24
    1082:	12 97       	sbiw	r26, 0x02	; 2
    1084:	9a 01       	movw	r18, r20
    1086:	ab 01       	movw	r20, r22
    1088:	67 e0       	ldi	r22, 0x07	; 7
    108a:	22 0f       	add	r18, r18
    108c:	33 1f       	adc	r19, r19
    108e:	44 1f       	adc	r20, r20
    1090:	55 1f       	adc	r21, r21
    1092:	6a 95       	dec	r22
    1094:	d1 f7       	brne	.-12     	; 0x108a <__unpack_f+0x54>
    1096:	83 e0       	ldi	r24, 0x03	; 3
    1098:	8c 93       	st	X, r24
    109a:	0d c0       	rjmp	.+26     	; 0x10b6 <__unpack_f+0x80>
    109c:	22 0f       	add	r18, r18
    109e:	33 1f       	adc	r19, r19
    10a0:	44 1f       	adc	r20, r20
    10a2:	55 1f       	adc	r21, r21
    10a4:	12 96       	adiw	r26, 0x02	; 2
    10a6:	8d 91       	ld	r24, X+
    10a8:	9c 91       	ld	r25, X
    10aa:	13 97       	sbiw	r26, 0x03	; 3
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	13 96       	adiw	r26, 0x03	; 3
    10b0:	9c 93       	st	X, r25
    10b2:	8e 93       	st	-X, r24
    10b4:	12 97       	sbiw	r26, 0x02	; 2
    10b6:	20 30       	cpi	r18, 0x00	; 0
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	38 07       	cpc	r19, r24
    10bc:	80 e0       	ldi	r24, 0x00	; 0
    10be:	48 07       	cpc	r20, r24
    10c0:	80 e4       	ldi	r24, 0x40	; 64
    10c2:	58 07       	cpc	r21, r24
    10c4:	58 f3       	brcs	.-42     	; 0x109c <__unpack_f+0x66>
    10c6:	14 96       	adiw	r26, 0x04	; 4
    10c8:	2d 93       	st	X+, r18
    10ca:	3d 93       	st	X+, r19
    10cc:	4d 93       	st	X+, r20
    10ce:	5c 93       	st	X, r21
    10d0:	17 97       	sbiw	r26, 0x07	; 7
    10d2:	08 95       	ret
    10d4:	2f 3f       	cpi	r18, 0xFF	; 255
    10d6:	31 05       	cpc	r19, r1
    10d8:	79 f4       	brne	.+30     	; 0x10f8 <__unpack_f+0xc2>
    10da:	41 15       	cp	r20, r1
    10dc:	51 05       	cpc	r21, r1
    10de:	61 05       	cpc	r22, r1
    10e0:	71 05       	cpc	r23, r1
    10e2:	19 f4       	brne	.+6      	; 0x10ea <__unpack_f+0xb4>
    10e4:	84 e0       	ldi	r24, 0x04	; 4
    10e6:	8c 93       	st	X, r24
    10e8:	08 95       	ret
    10ea:	64 ff       	sbrs	r22, 4
    10ec:	03 c0       	rjmp	.+6      	; 0x10f4 <__unpack_f+0xbe>
    10ee:	81 e0       	ldi	r24, 0x01	; 1
    10f0:	8c 93       	st	X, r24
    10f2:	12 c0       	rjmp	.+36     	; 0x1118 <__unpack_f+0xe2>
    10f4:	1c 92       	st	X, r1
    10f6:	10 c0       	rjmp	.+32     	; 0x1118 <__unpack_f+0xe2>
    10f8:	2f 57       	subi	r18, 0x7F	; 127
    10fa:	30 40       	sbci	r19, 0x00	; 0
    10fc:	13 96       	adiw	r26, 0x03	; 3
    10fe:	3c 93       	st	X, r19
    1100:	2e 93       	st	-X, r18
    1102:	12 97       	sbiw	r26, 0x02	; 2
    1104:	83 e0       	ldi	r24, 0x03	; 3
    1106:	8c 93       	st	X, r24
    1108:	87 e0       	ldi	r24, 0x07	; 7
    110a:	44 0f       	add	r20, r20
    110c:	55 1f       	adc	r21, r21
    110e:	66 1f       	adc	r22, r22
    1110:	77 1f       	adc	r23, r23
    1112:	8a 95       	dec	r24
    1114:	d1 f7       	brne	.-12     	; 0x110a <__unpack_f+0xd4>
    1116:	70 64       	ori	r23, 0x40	; 64
    1118:	14 96       	adiw	r26, 0x04	; 4
    111a:	4d 93       	st	X+, r20
    111c:	5d 93       	st	X+, r21
    111e:	6d 93       	st	X+, r22
    1120:	7c 93       	st	X, r23
    1122:	17 97       	sbiw	r26, 0x07	; 7
    1124:	08 95       	ret

00001126 <__fpcmp_parts_f>:
    1126:	1f 93       	push	r17
    1128:	dc 01       	movw	r26, r24
    112a:	fb 01       	movw	r30, r22
    112c:	9c 91       	ld	r25, X
    112e:	92 30       	cpi	r25, 0x02	; 2
    1130:	08 f4       	brcc	.+2      	; 0x1134 <__fpcmp_parts_f+0xe>
    1132:	47 c0       	rjmp	.+142    	; 0x11c2 <__fpcmp_parts_f+0x9c>
    1134:	80 81       	ld	r24, Z
    1136:	82 30       	cpi	r24, 0x02	; 2
    1138:	08 f4       	brcc	.+2      	; 0x113c <__fpcmp_parts_f+0x16>
    113a:	43 c0       	rjmp	.+134    	; 0x11c2 <__fpcmp_parts_f+0x9c>
    113c:	94 30       	cpi	r25, 0x04	; 4
    113e:	51 f4       	brne	.+20     	; 0x1154 <__fpcmp_parts_f+0x2e>
    1140:	11 96       	adiw	r26, 0x01	; 1
    1142:	1c 91       	ld	r17, X
    1144:	84 30       	cpi	r24, 0x04	; 4
    1146:	99 f5       	brne	.+102    	; 0x11ae <__fpcmp_parts_f+0x88>
    1148:	81 81       	ldd	r24, Z+1	; 0x01
    114a:	68 2f       	mov	r22, r24
    114c:	70 e0       	ldi	r23, 0x00	; 0
    114e:	61 1b       	sub	r22, r17
    1150:	71 09       	sbc	r23, r1
    1152:	3f c0       	rjmp	.+126    	; 0x11d2 <__fpcmp_parts_f+0xac>
    1154:	84 30       	cpi	r24, 0x04	; 4
    1156:	21 f0       	breq	.+8      	; 0x1160 <__fpcmp_parts_f+0x3a>
    1158:	92 30       	cpi	r25, 0x02	; 2
    115a:	31 f4       	brne	.+12     	; 0x1168 <__fpcmp_parts_f+0x42>
    115c:	82 30       	cpi	r24, 0x02	; 2
    115e:	b9 f1       	breq	.+110    	; 0x11ce <__fpcmp_parts_f+0xa8>
    1160:	81 81       	ldd	r24, Z+1	; 0x01
    1162:	88 23       	and	r24, r24
    1164:	89 f1       	breq	.+98     	; 0x11c8 <__fpcmp_parts_f+0xa2>
    1166:	2d c0       	rjmp	.+90     	; 0x11c2 <__fpcmp_parts_f+0x9c>
    1168:	11 96       	adiw	r26, 0x01	; 1
    116a:	1c 91       	ld	r17, X
    116c:	11 97       	sbiw	r26, 0x01	; 1
    116e:	82 30       	cpi	r24, 0x02	; 2
    1170:	f1 f0       	breq	.+60     	; 0x11ae <__fpcmp_parts_f+0x88>
    1172:	81 81       	ldd	r24, Z+1	; 0x01
    1174:	18 17       	cp	r17, r24
    1176:	d9 f4       	brne	.+54     	; 0x11ae <__fpcmp_parts_f+0x88>
    1178:	12 96       	adiw	r26, 0x02	; 2
    117a:	2d 91       	ld	r18, X+
    117c:	3c 91       	ld	r19, X
    117e:	13 97       	sbiw	r26, 0x03	; 3
    1180:	82 81       	ldd	r24, Z+2	; 0x02
    1182:	93 81       	ldd	r25, Z+3	; 0x03
    1184:	82 17       	cp	r24, r18
    1186:	93 07       	cpc	r25, r19
    1188:	94 f0       	brlt	.+36     	; 0x11ae <__fpcmp_parts_f+0x88>
    118a:	28 17       	cp	r18, r24
    118c:	39 07       	cpc	r19, r25
    118e:	bc f0       	brlt	.+46     	; 0x11be <__fpcmp_parts_f+0x98>
    1190:	14 96       	adiw	r26, 0x04	; 4
    1192:	8d 91       	ld	r24, X+
    1194:	9d 91       	ld	r25, X+
    1196:	0d 90       	ld	r0, X+
    1198:	bc 91       	ld	r27, X
    119a:	a0 2d       	mov	r26, r0
    119c:	24 81       	ldd	r18, Z+4	; 0x04
    119e:	35 81       	ldd	r19, Z+5	; 0x05
    11a0:	46 81       	ldd	r20, Z+6	; 0x06
    11a2:	57 81       	ldd	r21, Z+7	; 0x07
    11a4:	28 17       	cp	r18, r24
    11a6:	39 07       	cpc	r19, r25
    11a8:	4a 07       	cpc	r20, r26
    11aa:	5b 07       	cpc	r21, r27
    11ac:	18 f4       	brcc	.+6      	; 0x11b4 <__fpcmp_parts_f+0x8e>
    11ae:	11 23       	and	r17, r17
    11b0:	41 f0       	breq	.+16     	; 0x11c2 <__fpcmp_parts_f+0x9c>
    11b2:	0a c0       	rjmp	.+20     	; 0x11c8 <__fpcmp_parts_f+0xa2>
    11b4:	82 17       	cp	r24, r18
    11b6:	93 07       	cpc	r25, r19
    11b8:	a4 07       	cpc	r26, r20
    11ba:	b5 07       	cpc	r27, r21
    11bc:	40 f4       	brcc	.+16     	; 0x11ce <__fpcmp_parts_f+0xa8>
    11be:	11 23       	and	r17, r17
    11c0:	19 f0       	breq	.+6      	; 0x11c8 <__fpcmp_parts_f+0xa2>
    11c2:	61 e0       	ldi	r22, 0x01	; 1
    11c4:	70 e0       	ldi	r23, 0x00	; 0
    11c6:	05 c0       	rjmp	.+10     	; 0x11d2 <__fpcmp_parts_f+0xac>
    11c8:	6f ef       	ldi	r22, 0xFF	; 255
    11ca:	7f ef       	ldi	r23, 0xFF	; 255
    11cc:	02 c0       	rjmp	.+4      	; 0x11d2 <__fpcmp_parts_f+0xac>
    11ce:	60 e0       	ldi	r22, 0x00	; 0
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	cb 01       	movw	r24, r22
    11d4:	1f 91       	pop	r17
    11d6:	08 95       	ret

000011d8 <__prologue_saves__>:
    11d8:	2f 92       	push	r2
    11da:	3f 92       	push	r3
    11dc:	4f 92       	push	r4
    11de:	5f 92       	push	r5
    11e0:	6f 92       	push	r6
    11e2:	7f 92       	push	r7
    11e4:	8f 92       	push	r8
    11e6:	9f 92       	push	r9
    11e8:	af 92       	push	r10
    11ea:	bf 92       	push	r11
    11ec:	cf 92       	push	r12
    11ee:	df 92       	push	r13
    11f0:	ef 92       	push	r14
    11f2:	ff 92       	push	r15
    11f4:	0f 93       	push	r16
    11f6:	1f 93       	push	r17
    11f8:	cf 93       	push	r28
    11fa:	df 93       	push	r29
    11fc:	cd b7       	in	r28, 0x3d	; 61
    11fe:	de b7       	in	r29, 0x3e	; 62
    1200:	ca 1b       	sub	r28, r26
    1202:	db 0b       	sbc	r29, r27
    1204:	0f b6       	in	r0, 0x3f	; 63
    1206:	f8 94       	cli
    1208:	de bf       	out	0x3e, r29	; 62
    120a:	0f be       	out	0x3f, r0	; 63
    120c:	cd bf       	out	0x3d, r28	; 61
    120e:	09 94       	ijmp

00001210 <__epilogue_restores__>:
    1210:	2a 88       	ldd	r2, Y+18	; 0x12
    1212:	39 88       	ldd	r3, Y+17	; 0x11
    1214:	48 88       	ldd	r4, Y+16	; 0x10
    1216:	5f 84       	ldd	r5, Y+15	; 0x0f
    1218:	6e 84       	ldd	r6, Y+14	; 0x0e
    121a:	7d 84       	ldd	r7, Y+13	; 0x0d
    121c:	8c 84       	ldd	r8, Y+12	; 0x0c
    121e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1220:	aa 84       	ldd	r10, Y+10	; 0x0a
    1222:	b9 84       	ldd	r11, Y+9	; 0x09
    1224:	c8 84       	ldd	r12, Y+8	; 0x08
    1226:	df 80       	ldd	r13, Y+7	; 0x07
    1228:	ee 80       	ldd	r14, Y+6	; 0x06
    122a:	fd 80       	ldd	r15, Y+5	; 0x05
    122c:	0c 81       	ldd	r16, Y+4	; 0x04
    122e:	1b 81       	ldd	r17, Y+3	; 0x03
    1230:	aa 81       	ldd	r26, Y+2	; 0x02
    1232:	b9 81       	ldd	r27, Y+1	; 0x01
    1234:	ce 0f       	add	r28, r30
    1236:	d1 1d       	adc	r29, r1
    1238:	0f b6       	in	r0, 0x3f	; 63
    123a:	f8 94       	cli
    123c:	de bf       	out	0x3e, r29	; 62
    123e:	0f be       	out	0x3f, r0	; 63
    1240:	cd bf       	out	0x3d, r28	; 61
    1242:	ed 01       	movw	r28, r26
    1244:	08 95       	ret

00001246 <_exit>:
    1246:	f8 94       	cli

00001248 <__stop_program>:
    1248:	ff cf       	rjmp	.-2      	; 0x1248 <__stop_program>
